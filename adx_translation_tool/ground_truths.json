[{"kql": "let Variable1 = int(637);\nlet Variable2 = dynamic(null);\nlet Variable3 = datetime(2024-07-19T06:53:13Z);\nlet Variable4 = datetime(2024-07-26T06:53:13Z);\nlet Variable5 = dynamic([String1, String2, String3, String4, String5, String6, String7, String8, String9]);\nlet Variable15 = dynamic([String10, String11, String12, String13, String14]);\nlet Variable18 = toscalar(FunctionOrTable1(Variable3, Variable4, Variable15, dynamic(null), Variable2)\n| where Variable19 >= Variable1\n| summarize count() > 0\n);\nlet Variable20=FunctionOrTable2(Variable3,Variable4,Variable15,Variable2,Variable5)\n| where Variable18 == true\n| where Variable21 == String15\n| extend Variable23 = String16\n| extend Variable25 = iff(Variable26 > 0, String17, String18)\n| project Variable23, Variable25;\nlet Variable29 = FunctionOrTable3(Variable3, Variable4, Variable15, dynamic(null), Variable2)\n| where Variable18 == true\n| extend Variable23 = String19\n| extend Variable25 = iff(Variable30 > 1.5, String17, String18)\n| project Variable23, Variable25;\nlet Variable31 = FunctionOrTable4(Variable3, Variable4, Variable15, dynamic(null), Variable2)\n| where Variable18 == true\n| extend Variable23 = String20\n| extend Variable25 = iff(Variable32 > 1, String17, String18)\n| project Variable23, Variable25;\nlet Variable33 = FunctionOrTable5(Variable3, Variable4, Variable15, dynamic(null), Variable2)\n| where Variable18 == true\n| extend Variable23 = String21\n| extend Variable25 = iff(Variable32 > 0.5, String17, String18)\n| project Variable23, Variable25;\nlet FunctionOrTable6 = FunctionOrTable6(Variable3, Variable4, Variable15, dynamic(null), Variable2)\n| where Variable18 == true\n| extend Variable23 = String22\n| extend Variable25 = iff(Variable32 >= 2, String17, String18)\n| project Variable23, Variable25;\nlet Variable35 = FunctionOrTable7(Variable3, Variable4, Variable15, dynamic(null), Variable2)\n| where Variable18 == true\n| extend Variable23 = String23\n| extend Variable25 = iff(Variable30 > 5, String17, String18)\n| project Variable23, Variable25;\nlet Variable36 = FunctionOrTable8(Variable3, Variable4, Variable15, dynamic(null), Variable2)\n| where Variable18 == true\n| extend Variable23 = String24\n| extend Variable25 = iff(Variable32 >= 5, String17, String18)\n| project Variable23, Variable25;\nlet Variable37 = union Variable29, Variable31, Variable33,\nVariable38,\nVariable35, Variable36;\nlet Variable39 = toscalar(Variable20 | summarize count() > 0);\nlet Variable40 = toscalar(Variable37 | summarize countif(Variable25 == String17) > 0);\nunion \n(Variable20 | where Variable39 == true and Variable18 == true),\n(datatable(Variable23:string, Variable25:string)[String25, String26] | where Variable18 == false), \n(datatable(Variable23:string, Variable25:string)[String25, String27] | where Variable39 == false and Variable18 == true), \n(datatable(Variable23:string, Variable25:string)[String28, String26] | where Variable18 == false), \n(datatable(Variable23:string, Variable25:string)[String28, String27] | where Variable40 == false and Variable18 == true), \n(datatable(Variable23:string, Variable25:string)[String28, String29] | where Variable40 == true and Variable18 == true)\n| order by Variable23 asc", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 BOOLEAN;\nDECLARE Variable5 BOOLEAN;\nDECLARE Variable6 BOOLEAN;\nDECLARE Variable7 = String5;\nDECLARE Variable8 = 637;\nDECLARE Variable9 = String6;\nSET VAR Variable4 = (\nselect case when count(*) > 0 then true else false end as output\nfrom FunctionOrTable1(Variable1, Variable2, Variable3, String7, Variable7)\nwhere Variable10 >= Variable8);\ncreate or replace temporary view Variable11 as (\nselect String8 as Variable12, case when Variable13 > 0 then String9 else String10 end as Variable14\nfrom FunctionOrTable2(Variable1, Variable2, Variable3, String7, Variable9)\nwhere Variable15 = String11\n);\ncreate or replace temporary view Variable16 as (\nSELECT String12 as Variable12, case when Variable17 > 1.5 then String9 else String10 end as Variable14\nfrom FunctionOrTable3(Variable1, Variable2, Variable3, String7, Variable7)\nwhere Variable4 = true\n);\ncreate or replace temporary view Variable18 as (\nSELECT String13 as Variable12, case when Variable19 > 1 then String9 else String10 end as Variable14\nfrom FunctionOrTable4(Variable1, Variable2, Variable3, String7, Variable7)\nwhere Variable4 = true\n);\ncreate or replace temporary view Variable20 as (\nSELECT String14 as Variable12, case when Variable19 > 0.5 then String9 else String10 end as Variable14\nfrom FunctionOrTable5(Variable1, Variable2, Variable3, String7, Variable7)\nwhere Variable4 = true\n);\ncreate or replace temporary view FunctionOrTable6 as (\nSELECT String15 as Variable12, case when Variable19 >= 2 then String9 else String10 end as Variable14\nfrom FunctionOrTable6(Variable1, Variable2, Variable3, String7, Variable7)\nwhere Variable4 = true\n);\ncreate or replace temporary view Variable21 as (\nSELECT String16 as Variable12, case when Variable17 > 5 then String9 else String10 end as Variable14\nfrom FunctionOrTable7(Variable1, Variable2, Variable3, String7, Variable7)\nwhere Variable4 = true\n);\ncreate or replace temporary view Variable22 as (\nSELECT String17 as Variable12, case when Variable19 >= 5 then String9 else String10 end as Variable14\nfrom FunctionOrTable8(Variable1, Variable2, Variable3, String7, Variable7)\nwhere Variable4 = true\n);\ncreate or replace temporary view Variable23 as (\nSELECT * \nFROM Variable16\nUNION ALL\nSELECT * \nFROM Variable18\nUNION ALL\nSELECT * \nFROM Variable20\nUNION ALL\nSELECT * \nFROM FunctionOrTable6\nUNION ALL\nSELECT * \nFROM Variable21\nUNION ALL\nSELECT * \nFROM Variable22\n);\nSET VAR Variable5 = (\nselect case when count(*) > 0 then true else false end as output\nfrom FunctionOrTable2(Variable1, Variable2, String7, String7, Variable9));\nSET VAR Variable6 = (\nselect count(case when Variable14 = String9 then 1 end) > 0\nfrom Variable23);\ncreate or replace temporary view Variable24 AS (\nSELECT String8 AS Variable12, String18 AS Variable14\nWHERE NOT Variable4\n);\ncreate or replace temporary view Variable25 AS (\nSELECT String8 AS Variable12, String10 AS Variable14\nWHERE NOT Variable5 AND Variable4 = true\n);\ncreate or replace temporary view Variable26 AS (\nSELECT String19 AS Variable12, String18 AS Variable14\nWHERE NOT Variable4\n);\ncreate or replace temporary view Variable27 AS (\nSELECT String19 AS Variable12, String10 AS Variable14\nWHERE NOT Variable6 AND Variable4 = true\n);\ncreate or replace temporary view Variable28 AS (\nSELECT String19 AS Variable12, String9 AS Variable14\nWHERE Variable6 = true AND Variable4 = true\n);\nSELECT Variable12, Variable14\nFROM (\nselect String8 as Variable12, case when Variable13 > 0 then String9 else String10 end as Variable14\nfrom FunctionOrTable2(Variable1, Variable2, String7, String7, Variable9)\nWHERE Variable5 = true AND Variable4 = true\n)\nUNION ALL\nSELECT Variable12, Variable14\nFROM Variable24\nUNION ALL\nSELECT Variable12, Variable14\nFROM Variable25\nUNION ALL\nSELECT Variable12, Variable14\nFROM Variable26\nUNION ALL\nSELECT Variable12, Variable14\nFROM Variable27\nUNION ALL\nSELECT Variable12, Variable14\nFROM Variable28\nORDER BY Variable12 ASC"}, {"kql": "let Variable1 = int(2435);\nlet Variable2 = dynamic(null);\nlet Variable3 = datetime(2024-07-19T07:01:30Z);\nlet Variable4 = datetime(2024-07-26T07:01:30Z);\nlet Variable5 = dynamic([String1, String2, String3, String4, String5, String6, String7, String8, String9]);\nlet Variable15 = dynamic([String10, String11, String12]);\nlet Variable18 = toscalar(FunctionOrTable1(Variable3, Variable4, dynamic(null), Variable15, Variable2)\n| where Variable19 >= Variable1\n| summarize count() > 0\n);\nlet Variable20=FunctionOrTable2(Variable3,Variable4,Variable15,Variable2,Variable5)\n| where Variable18 == true\n| where Variable21 == String13\n| extend Variable23 = String14\n| extend Variable25 = iff(Variable26 > 0, String15, String16)\n| project Variable23, Variable25;\nlet Variable29 = FunctionOrTable3(Variable3, Variable4, dynamic(null), Variable15, Variable2)\n| where Variable18 == true\n| extend Variable23 = String17\n| extend Variable25 = iff(Variable30 > 1.5, String15, String16)\n| project Variable23, Variable25;\nlet Variable31 = FunctionOrTable4(Variable3, Variable4, dynamic(null), Variable15, Variable2)\n| where Variable18 == true\n| extend Variable23 = String18\n| extend Variable25 = iff(Variable32 > 1, String15, String16)\n| project Variable23, Variable25;\nlet Variable33 = FunctionOrTable5(Variable3, Variable4, dynamic(null), Variable15, Variable2)\n| where Variable18 == true\n| extend Variable23 = String19\n| extend Variable25 = iff(Variable32 > 0.5, String15, String16)\n| project Variable23, Variable25;\nlet FunctionOrTable6 = FunctionOrTable6(Variable3, Variable4, dynamic(null), Variable15, Variable2)\n| where Variable18 == true\n| extend Variable23 = String20\n| extend Variable25 = iff(Variable32 >= 2, String15, String16)\n| project Variable23, Variable25;\nlet Variable35 = FunctionOrTable7(Variable3, Variable4, dynamic(null), Variable15, Variable2)\n| where Variable18 == true\n| extend Variable23 = String21\n| extend Variable25 = iff(Variable30 > 5, String15, String16)\n| project Variable23, Variable25;\nlet Variable36 = FunctionOrTable8(Variable3, Variable4, dynamic(null), Variable15, Variable2)\n| where Variable18 == true\n| extend Variable23 = String22\n| extend Variable25 = iff(Variable32 >= 5, String15, String16)\n| project Variable23, Variable25;\nlet Variable37=FunctionOrTable9(Variable3, Variable4, dynamic(null), Variable15, Variable2)\n| where Variable38==String23\n| extend Variable23=String24\n| extend Variable25 = iff(Variable41 > 1, String15, String16);\nlet Variable42=Variable43(Variable3, Variable4, dynamic(null), Variable15, Variable2)\n| where Variable38==String23\n| extend Variable23=String25\n| extend Variable25 = iff(Variable41 > 1, String15, String16);\nlet Variable45 = union Variable29, Variable31, Variable33, Variable46,\nVariable35, Variable36,\nVariable37, Variable42;\nlet Variable47 = toscalar(Variable20 | summarize count() > 0);\nlet Variable48 = toscalar(Variable45 | summarize countif(Variable25 == String15) > 0);\nunion \n(Variable20 | where Variable47 == true and Variable18 == true),\n(datatable(Variable23:string, Variable25:string)[String26, String27] | where Variable18 == false), \n(datatable(Variable23:string, Variable25:string)[String26, String28] | where Variable47 == false and Variable18 == true), \n(datatable(Variable23:string, Variable25:string)[String29, String27] | where Variable18 == false), \n(datatable(Variable23:string, Variable25:string)[String29, String28] | where Variable48 == false and Variable18 == true), \n(datatable(Variable23:string, Variable25:string)[String29, String30] | where Variable48 == true and Variable18 == true)\n| order by Variable23 asc", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 BOOLEAN;\nDECLARE Variable5 BOOLEAN;\nDECLARE Variable6 BOOLEAN;\nDECLARE Variable7 = String5;\nDECLARE Variable8 = 2345;\nDECLARE Variable9 = String6;\nSET VAR Variable4 = (\nselect case when count(*) > 0 then true else false end as output\nfrom FunctionOrTable1(Variable1, Variable2, String7, Variable3, Variable7)\nwhere Variable10 >= Variable8);\ncreate or replace temporary view Variable11 as (\nselect String8 as Variable12, case when Variable13 > 0 then String9 else String10 end as Variable14\nfrom FunctionOrTable2(Variable1, Variable2, Variable3, Variable7, Variable9)\nwhere Variable15 = String11\n);\ncreate or replace temporary view Variable16 as (\nSELECT String12 as Variable12, case when Variable17 > 1.5 then String9 else String10 end as Variable14\nfrom FunctionOrTable3(Variable1, Variable2, String7, Variable3, Variable7)\nwhere Variable4 = true\n);\ncreate or replace temporary view Variable18 as (\nSELECT String13 as Variable12, case when Variable19 > 1 then String9 else String10 end as Variable14\nfrom FunctionOrTable4(Variable1, Variable2, String7, Variable3, Variable7)\nwhere Variable4 = true\n);\ncreate or replace temporary view Variable20 as (\nSELECT String14 as Variable12, case when Variable19 > 0.5 then String9 else String10 end as Variable14\nfrom FunctionOrTable5(Variable1, Variable2, String7, Variable3, Variable7)\nwhere Variable4 = true\n);\ncreate or replace temporary view FunctionOrTable6 as (\nSELECT String15 as Variable12, case when Variable19 >= 2 then String9 else String10 end as Variable14\nfrom FunctionOrTable6(Variable1, Variable2, String7, Variable3, Variable7)\nwhere Variable4 = true\n);\ncreate or replace temporary view Variable21 as (\nSELECT String16 as Variable12, case when Variable17 > 5 then String9 else String10 end as Variable14\nfrom FunctionOrTable7(Variable1, Variable2, String7, Variable3, Variable7)\nwhere Variable4 = true\n);\ncreate or replace temporary view Variable22 as (\nSELECT String17 as Variable12, case when Variable19 >= 5 then String9 else String10 end as Variable14\nfrom FunctionOrTable8(Variable1, Variable2, String7, Variable3, Variable7)\nwhere Variable4 = true\n);\ncreate or replace temporary view Variable23 as (\nSELECT * \nFROM Variable16\nUNION ALL\nSELECT * \nFROM Variable18\nUNION ALL\nSELECT * \nFROM Variable20\nUNION ALL\nSELECT * \nFROM FunctionOrTable6\nUNION ALL\nSELECT * \nFROM Variable21\nUNION ALL\nSELECT * \nFROM Variable22\n);\nSET VAR Variable5 = (\nselect case when count(*) > 0 then true else false end as output\nfrom FunctionOrTable2(Variable1, Variable2, String7, String7, Variable9));\nSET VAR Variable6 = (\nselect count(case when Variable14 = String9 then 1 end) > 0\nfrom Variable23);\ncreate or replace temporary view Variable24 AS (\nSELECT String8 AS Variable12, String18 AS Variable14\nWHERE NOT Variable4\n);\ncreate or replace temporary view Variable25 AS (\nSELECT String8 AS Variable12, String10 AS Variable14\nWHERE NOT Variable5 AND Variable4 = true\n);\ncreate or replace temporary view Variable26 AS (\nSELECT String19 AS Variable12, String18 AS Variable14\nWHERE NOT Variable4\n);\ncreate or replace temporary view Variable27 AS (\nSELECT String19 AS Variable12, String10 AS Variable14\nWHERE NOT Variable6 AND Variable4 = true\n);\ncreate or replace temporary view Variable28 AS (\nSELECT String19 AS Variable12, String9 AS Variable14\nWHERE Variable6 = true AND Variable4 = true\n);\nSELECT Variable12, Variable14\nFROM (\nselect String8 as Variable12, case when Variable13 > 0 then String9 else String10 end as Variable14\nfrom FunctionOrTable2(Variable1, Variable2, String7, String7, Variable9)\nWHERE Variable5 = true AND Variable4 = true\n)\nUNION ALL\nSELECT Variable12, Variable14\nFROM Variable24\nUNION ALL\nSELECT Variable12, Variable14\nFROM Variable25\nUNION ALL\nSELECT Variable12, Variable14\nFROM Variable26\nUNION ALL\nSELECT Variable12, Variable14\nFROM Variable27\nUNION ALL\nSELECT Variable12, Variable14\nFROM Variable28\nORDER BY Variable12 ASC"}, {"kql": "let Variable1 = int(2435);\nlet Variable2 = dynamic(null);\nlet Variable3 = String1;\nlet Variable5 = datetime(2024-07-19T07:04:11Z);\nlet Variable6 = datetime(2024-07-26T07:04:11Z);\nlet Variable7 = dynamic(null);\nlet Variable8 = dynamic([String2, String3, String4, String5, String6, String7, String8, String9, String10]);\nlet Variable18 = dynamic([String11, String12, String13, String14, String15]);\nlet Variable21 = dynamic([String16, String17, String18]);\nlet Variable24 = toscalar(FunctionOrTable1(Variable5, Variable6,Variable3,Variable18,Variable21,Variable7));\nlet Variable25 = toscalar(FunctionOrTable2(Variable5, Variable6, dynamic(null), Variable24, Variable2)\n| where Variable26 >= Variable1\n| summarize count() > 0\n);\nlet Variable27=FunctionOrTable3(Variable5,Variable6,Variable24,Variable2,Variable8)\n| where Variable25 == true\n| where Variable28 == String19\n| extend Variable30 = String20\n| extend Variable32 = iff(Variable33 > 0, String21, String22)\n| project Variable30, Variable32;\nlet Variable36 = FunctionOrTable4(Variable5, Variable6, dynamic(null), Variable24, Variable2)\n| where Variable25 == true\n| extend Variable30 = String23\n| extend Variable32 = iff(Variable37 > 1.5, String21, String22)\n| project Variable30, Variable32;\nlet Variable38 = FunctionOrTable5(Variable5, Variable6, dynamic(null), Variable24, Variable2)\n| where Variable25 == true\n| extend Variable30 = String24\n| extend Variable32 = iff(Variable39 > 1, String21, String22)\n| project Variable30, Variable32;\nlet Variable40 = FunctionOrTable6(Variable5, Variable6, dynamic(null), Variable24, Variable2)\n| where Variable25 == true\n| extend Variable30 = String25\n| extend Variable32 = iff(Variable39 > 0.5, String21, String22)\n| project Variable30, Variable32;\nlet FunctionOrTable7 = FunctionOrTable7(Variable5, Variable6, dynamic(null), Variable24, Variable2)\n| where Variable25 == true\n| extend Variable30 = String26\n| extend Variable32 = iff(Variable39 >= 2, String21, String22)\n| project Variable30, Variable32;\nlet Variable42 = FunctionOrTable8(Variable5, Variable6, dynamic(null), Variable24, Variable2)\n| where Variable25 == true\n| extend Variable30 = String27\n| extend Variable32 = iff(Variable37 > 5, String21, String22)\n| project Variable30, Variable32;\nlet Variable43 = FunctionOrTable9(Variable5, Variable6, dynamic(null), Variable24, Variable2)\n| where Variable25 == true\n| extend Variable30 = String28\n| extend Variable32 = iff(Variable39 >= 5, String21, String22)\n| project Variable30, Variable32;\nlet Variable44=FunctionOrTable10(Variable5, Variable6, dynamic(null), Variable24, Variable2)\n| where Variable45==String29\n| extend Variable30=String30\n| extend Variable32 = iff(Variable50 > 1, String21, String22);\nlet Variable51=Variable52(Variable5, Variable6, dynamic(null), Variable24, Variable2)\n| where Variable45==String29\n| extend Variable30=String31\n| extend Variable32 = iff(Variable50 > 1, String21, String22);\nlet Variable54 = union Variable36, Variable38, Variable55,\nVariable42, Variable43,\nVariable44, Variable51;\nlet Variable56 = toscalar(Variable27 | summarize count() > 0);\nlet Variable57 = toscalar(Variable54 | summarize countif(Variable32 == String21) > 0);\nunion \n(Variable27 | where Variable56 == true and Variable25 == true),\n(datatable(Variable30:string, Variable32:string)[String32, String33] | where Variable25 == false), \n(datatable(Variable30:string, Variable32:string)[String32, String34] | where Variable56 == false and Variable25 == true), \n(datatable(Variable30:string, Variable32:string)[String35, String33] | where Variable25 == false), \n(datatable(Variable30:string, Variable32:string)[String35, String34] | where Variable57 == false and Variable25 == true), \n(datatable(Variable30:string, Variable32:string)[String35, String36] | where Variable57 == true and Variable25 == true)\n| order by Variable30 asc", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 = String5;\nDECLARE Variable5 = String6;\nDECLARE Variable6 = String7;\nDECLARE Variable7 STRING;\nDECLARE Variable8 BOOLEAN;\nDECLARE Variable9 BOOLEAN;\nDECLARE Variable10 BOOLEAN;\nDECLARE Variable11 = String8;\nDECLARE Variable12 = 2345;\nDECLARE Variable13 = String9;\nSET VAR Variable7 = (\nselect array_join(collect_list(output), String10)\nfrom FunctionOrTable1(Variable1, Variable2, Variable3, Variable4, Variable5, Variable6));\nSET VAR Variable8 = (\nselect case when count(*) > 0 then true else false end as output\nfrom FunctionOrTable2(Variable1, Variable2, String11, Variable7, Variable11)\nwhere Variable14 >= Variable12);\ncreate or replace temporary view Variable15 as (\nselect String12 as Variable16, case when Variable17 > 0 then String13 else String14 end as Variable18\nfrom FunctionOrTable3(Variable1, Variable2, String11, String11, Variable13)\n);\ncreate or replace temporary view Variable19 as (\nSELECT String15 as Variable16, case when Variable20 > 1.5 then String13 else String14 end as Variable18\nfrom FunctionOrTable4(Variable1, Variable2, String11, Variable7, Variable11)\nwhere Variable8 = true\n);\ncreate or replace temporary view Variable21 as (\nSELECT String16 as Variable16, case when Variable22 > 1 then String13 else String14 end as Variable18\nfrom FunctionOrTable5(Variable1, Variable2, String11, Variable7, Variable11)\nwhere Variable8 = true\n);\ncreate or replace temporary view Variable23 as (\nSELECT String17 as Variable16, case when Variable22 > 0.5 then String13 else String14 end as Variable18\nfrom FunctionOrTable6(Variable1, Variable2, String11, Variable7, Variable11)\nwhere Variable8 = true\n);\ncreate or replace temporary view FunctionOrTable7 as (\nSELECT String18 as Variable16, case when Variable22 >= 2 then String13 else String14 end as Variable18\nfrom FunctionOrTable7(Variable1, Variable2, String11, Variable7, Variable11)\nwhere Variable8 = true\n);\ncreate or replace temporary view Variable24 as (\nSELECT String19 as Variable16, case when Variable20 > 5 then String13 else String14 end as Variable18\nfrom FunctionOrTable8(Variable1, Variable2, String11, Variable7, Variable11)\nwhere Variable8 = true\n);\ncreate or replace temporary view Variable25 as (\nSELECT String20 as Variable16, case when Variable22 >= 5 then String13 else String14 end as Variable18\nfrom FunctionOrTable9(Variable1, Variable2, String11, Variable7, Variable11)\nwhere Variable8 = true\n);\ncreate or replace temporary view Variable26 as (\nSELECT * \nFROM Variable19\nUNION ALL\nSELECT * \nFROM Variable21\nUNION ALL\nSELECT * \nFROM Variable23\nUNION ALL\nSELECT * \nFROM FunctionOrTable7\nUNION ALL\nSELECT * \nFROM Variable24\nUNION ALL\nSELECT * \nFROM Variable25\n);\nSET VAR Variable9 = (\nselect case when count(*) > 0 then true else false end as output\nfrom FunctionOrTable3(Variable1, Variable2, String11, String11, Variable13));\nSET VAR Variable10 = (\nselect count(case when Variable18 = String13 then 1 end) > 0\nfrom Variable26);\ncreate or replace temporary view Variable27 AS (\nSELECT String12 AS Variable16, String21 AS Variable18\nWHERE NOT Variable8\n);\ncreate or replace temporary view Variable28 AS (\nSELECT String12 AS Variable16, String14 AS Variable18\nWHERE NOT Variable9 AND Variable8 = true\n);\ncreate or replace temporary view Variable29 AS (\nSELECT String22 AS Variable16, String21 AS Variable18\nWHERE NOT Variable8\n);\ncreate or replace temporary view Variable30 AS (\nSELECT String22 AS Variable16, String14 AS Variable18\nWHERE NOT Variable10 AND Variable8 = true\n);\ncreate or replace temporary view Variable31 AS (\nSELECT String22 AS Variable16, String13 AS Variable18\nWHERE Variable10 = true AND Variable8 = true\n);\nSELECT Variable16, Variable18\nFROM (\nselect String12 as Variable16, case when Variable17 > 0 then String13 else String14 end as Variable18\nfrom FunctionOrTable3(Variable1, Variable2, String11, String11, Variable13)\nWHERE Variable9 = true AND Variable8 = true\n)\nUNION ALL\nSELECT Variable16, Variable18\nFROM Variable27\nUNION ALL\nSELECT Variable16, Variable18\nFROM Variable28\nUNION ALL\nSELECT Variable16, Variable18\nFROM Variable29\nUNION ALL\nSELECT Variable16, Variable18\nFROM Variable30\nUNION ALL\nSELECT Variable16, Variable18\nFROM Variable31\nORDER BY Variable16 ASC"}, {"kql": "let Variable1 = dynamic(null);\nlet Variable2 = datetime(2024-07-19T07:05:24Z);\nlet Variable3 = datetime(2024-07-26T07:05:24Z);\nlet Variable4 = dynamic([String1, String2, String3, String4, String5]);\nFunctionOrTable1(Variable2, Variable3, Variable4, dynamic(null), Variable1)\n| top 1 by Variable7", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 BOOLEAN;\nDECLARE Variable5 = String5;\nselect max(Variable6)\nfrom FunctionOrTable1(Variable1, Variable2, Variable3, String6, Variable5)"}, {"kql": "let Variable1 = dynamic(null);\nlet Variable2 = datetime(2024-07-19T07:06:59Z);\nlet Variable3 = datetime(2024-07-26T07:06:59Z);\nlet Variable4 = dynamic([String1, String2, String3]);\nFunctionOrTable1(Variable2, Variable3, dynamic(null), Variable4, Variable1)\n| top 1 by Variable7", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 BOOLEAN;\nDECLARE Variable5 = String5;\nselect max(Variable6)\nfrom FunctionOrTable1(Variable1, Variable2, String6, Variable3, Variable5)"}, {"kql": "let Variable1 = dynamic(null);\nlet Variable2 = String1;\nlet Variable4 = datetime(2024-07-19T07:07:56Z);\nlet Variable5 = datetime(2024-07-26T07:07:56Z);\nlet Variable6 = dynamic(null);\nlet Variable7 = dynamic([String2, String3, String4, String5, String6]);\nlet Variable10 = dynamic([String7, String8, String9]);\nlet Variable13 = toscalar(FunctionOrTable1(Variable4, Variable5,Variable2,Variable7,Variable10,Variable6));\nFunctionOrTable2(Variable4, Variable5, dynamic(null), Variable13, Variable1)\n| top 1 by Variable14", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 = String5;\nDECLARE Variable5 = String6;\nDECLARE Variable6 = String7;\nDECLARE Variable7 STRING;\nDECLARE Variable8 = String8;\nSET VAR Variable7 = (\nselect array_join(collect_list(output), String9)\nfrom FunctionOrTable1(Variable1, Variable2, Variable3, Variable4, Variable5, Variable6));\nselect max(Variable9)\nfrom FunctionOrTable2(Variable1, Variable2, String10, Variable7, Variable8)"}, {"kql": "let Variable1 = dynamic(null);\nlet Variable2 = datetime(2024-07-19T07:08:59Z);\nlet Variable3 = datetime(2024-07-26T07:08:59Z);\nlet Variable4 = dynamic([String1, String2, String3]);\nlet Variable7 = Variable4;\nlet Variable8 = print Variable9=Variable1;\nlet Variable10 = dynamic(null);\nlet Variable11 = toscalar(Variable8 | Variable12-expand Variable9 \n| extend Variable9=tostring(Variable9)\n| extend Variable13=parse_version(Variable9)\n| summarize arg_max(Variable13, Variable9)\n| project Variable9);\nFunctionOrTable1\n| where TIME between (startofday(Variable2)..endofday(Variable3))\nand Variable14 == (String4) and Variable16 == String5 and isnotempty(Variable18)\nand Variable18 in (Variable7)\n| extend Variable19=tolong(Variable20.Variable19), Variable21=Variable18, Variable22=tostring(Variable20.Variable22)\n| extend Count=tolong(Variable20.[String6]) \n| extend Variable23=tostring(Variable20.Variable23)\n| extend Variable24 = iif(Variable22 contains String7, String7, String8)\n| where Variable24==String7\n| where parse_version(Variable23) <= parse_version(Variable11)\n| where Variable19 in (264,265,271,277,278,706,707,1103,1104,1112,2945,2946,2947,552,730)\n| extend Variable28= case(\nVariable19 == 264, String9,\nVariable19 == 265, String10,\nVariable19 == 271, String11,\nVariable19 == 277, String12,\nVariable19 == 278, String13,\nVariable19 == 564, String14,\nVariable19 == 706, String15,\nVariable19 == 707, String16,\nVariable19 == 1103, String17,\nVariable19 == 1104, String18,\nVariable19 == 1112, String19,\nVariable19 == 2945, String20,\nVariable19 == 2947, String21,String22)\n| project Variable21, Variable23, Variable19, Variable28, Count, Variable24\n| summarize\nVariable55=sumif(Count, Variable19==706 and parse_version(Variable23) == parse_version(Variable11)),\nVariable56=sumif(Count, Variable19==706 and parse_version(Variable23) < parse_version(Variable11)),\nVariable57=sumif(Count, Variable19==707 and parse_version(Variable23) <= parse_version(Variable11)\nand (Variable23 in (Variable10) or isempty(Variable10))),\nVariable58=sumif(Count, Variable19==265 and parse_version(Variable23) < parse_version(Variable11)\nand (Variable23 in (Variable10) or isempty(Variable10))),\nVariable59=sumif(Count, Variable19==271 and parse_version(Variable23) < parse_version(Variable11)\nand (Variable23 in (Variable10) or isempty(Variable10))),\nVariable60=sumif(Count, Variable19==277 and parse_version(Variable23) < parse_version(Variable11)\nand (Variable23 in (Variable10) or isempty(Variable10)))\n| Variable61 Variable62()\n| project Variable28=Variable63, Count=tolong(Variable64)\n| where Count > 0", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 = String5;\nDECLARE Variable5 = String6;\nDECLARE Variable6 STRING;\nUSE Variable7.Variable8;\nSET VAR Variable6 = (\nselect max(FunctionOrTable1(Variable9)) as Variable9\nfrom (SELECT explode(transform(split(Variable10, String7), Variable11 -> rtrim(String8, Variable11))) AS Variable9));\nWITH Variable12 AS (\nSELECT \nVariable13:Variable14 AS Variable14,\nVariable13:Variable15 AS Variable16,\nVariable13:count AS Count,\nVariable13:Variable17 AS Variable17,\nCASE \nWHEN Variable13:Variable18 LIKE String9 THEN String10 \nELSE String11 \nEND AS Variable19\nFROM FunctionOrTable2\nWHERE \nTIME BETWEEN DATE_TRUNC(String12, Variable1) AND DATE_TRUNC(String12, DATE_ADD(Variable2, 1))\nAND Variable20 = String13\nAND Variable21 = String14\nAND Variable15 IS NOT NULL\nAND Variable15 IN (Variable3)\n),\nVariable22 AS (\nSELECT *\nFROM Variable12\nWHERE Variable19 = String10\nAND FunctionOrTable1(Variable17) <= FunctionOrTable1(Variable6)\nAND Variable14 IN (264, 265, 271, 277, 278, 706, 707, 1103, 1104, 1112, 2945, 2946, 2947, 552, 730)\n),\nVariable23 AS (\nSELECT *,\nCASE\nWHEN Variable14 = 264 THEN String15\nWHEN Variable14 = 265 THEN String16\nWHEN Variable14 = 271 THEN String17\nWHEN Variable14 = 277 THEN String18\nWHEN Variable14 = 278 THEN String19\nWHEN Variable14 = 564 THEN String20\nWHEN Variable14 = 706 THEN String21\nWHEN Variable14 = 707 THEN String22\nWHEN Variable14 = 1103 THEN String23\nWHEN Variable14 = 1104 THEN String24\nWHEN Variable14 = 1112 THEN String25\nWHEN Variable14 = 2945 THEN String26\nWHEN Variable14 = 2947 THEN String27\nELSE String6\nEND AS Variable24\nFROM Variable22\n),\nVariable25 AS (\nSELECT \nVariable17,\nVariable14,\nVariable24,\nSUM(CASE WHEN Variable14 = 706 AND FunctionOrTable1(Variable17) = FunctionOrTable1(Variable6) THEN Count ELSE 0 END) AS Variable26,\nSUM(CASE WHEN Variable14 = 706 AND FunctionOrTable1(Variable17) < FunctionOrTable1(Variable6) THEN Count ELSE 0 END) AS Variable27,\nSUM(CASE WHEN Variable14 = 707 AND FunctionOrTable1(Variable17) <= FunctionOrTable1(Variable6) AND (Variable5 IS NULL OR Variable17 IN (Variable5)) THEN Count ELSE 0 END) AS Variable28,\nSUM(CASE WHEN Variable14 = 265 AND FunctionOrTable1(Variable17) < FunctionOrTable1(Variable6) AND (Variable5 IS NULL OR Variable17 IN (Variable5)) THEN Count ELSE 0 END) AS Variable29,\nSUM(CASE WHEN Variable14 = 271 AND FunctionOrTable1(Variable17) < FunctionOrTable1(Variable6) AND (Variable5 IS NULL OR Variable17 IN (Variable5)) THEN Count ELSE 0 END) AS Variable30,\nSUM(CASE WHEN Variable14 = 277 AND FunctionOrTable1(Variable17) < FunctionOrTable1(Variable6) AND (Variable5 IS NULL OR Variable17 IN (Variable5)) THEN Count ELSE 0 END) AS Variable31\nFROM Variable23\nGROUP BY Variable17, Variable14, Variable24\n),\nVariable32 AS (\nSELECT String28 AS Variable24, Variable26 AS Count FROM Variable25 WHERE Variable26 > 0\nUNION ALL\nSELECT String29 AS Variable24, Variable27 AS Count FROM Variable25 WHERE Variable27 > 0\nUNION ALL\nSELECT String30 AS Variable24, Variable28 AS Count FROM Variable25 WHERE Variable28 > 0\nUNION ALL\nSELECT String31 AS Variable24, Variable29 AS Count FROM Variable25 WHERE Variable29 > 0\nUNION ALL\nSELECT String32 AS Variable24, Variable30 AS Count FROM Variable25 WHERE Variable30 > 0\nUNION ALL\nSELECT String33 AS Variable24, Variable31 AS Count FROM Variable25 WHERE Variable31 > 0\n)\nSELECT Variable24, Count\nFROM Variable32\nWHERE Count > 0"}, {"kql": "let Variable1 = dynamic(null);\nlet Variable2 = String1;\nlet Variable4 = datetime(2024-07-19T07:10:27Z);\nlet Variable5 = datetime(2024-07-26T07:10:27Z);\nlet Variable6 = dynamic(null);\nlet Variable7 = dynamic([String2, String3, String4, String5, String6]);\nlet Variable10 = dynamic([String7, String8, String9]);\nlet Variable13 = toscalar(FunctionOrTable1(Variable4, Variable5,Variable2,Variable7,Variable10,Variable6));\nlet Variable14 = print Variable15=Variable1;\nlet Variable16 = dynamic(null);\nlet Variable17 = toscalar(Variable14 | Variable18-expand Variable15 \n| extend Variable15=tostring(Variable15)\n| extend Variable19=parse_version(Variable15)\n| summarize arg_max(Variable19, Variable15)\n| project Variable15);\nFunctionOrTable2\n| where TIME between (startofday(Variable4)..endofday(Variable5))\nand Variable20 == (String10) and Variable22 == String11 and isnotempty(Variable24)\nand Variable24 in (Variable13)\n| extend Variable25=tolong(Variable26.Variable25), Variable27=Variable24, Variable28=tostring(Variable26.Variable28)\n| extend Count=tolong(Variable26.[String12]) \n| extend Variable29=tostring(Variable26.Variable29)\n| extend Variable30 = iif(Variable28 contains String13, String13, String14)\n| where Variable30==String13\n| where parse_version(Variable29) <= parse_version(Variable17)\n| where Variable25 in (264,265,271,277,278,706,707,1103,1104,1112,2945,2946,2947,552,730)\n| extend Variable34= case(\nVariable25 == 264, String15,\nVariable25 == 265, String16,\nVariable25 == 271, String17,\nVariable25 == 277, String18,\nVariable25 == 278, String19,\nVariable25 == 564, String20,\nVariable25 == 706, String21,\nVariable25 == 707, String22,\nVariable25 == 1103, String23,\nVariable25 == 1104, String24,\nVariable25 == 1112, String25,\nVariable25 == 2945, String26,\nVariable25 == 2947, String27,String28)\n| project Variable27, Variable29, Variable25, Variable34, Count, Variable30\n| summarize\nVariable61=sumif(Count, Variable25==706 and parse_version(Variable29) == parse_version(Variable17)),\nVariable62=sumif(Count, Variable25==706 and parse_version(Variable29) < parse_version(Variable17)),\nVariable63=sumif(Count, Variable25==707 and parse_version(Variable29) <= parse_version(Variable17)\nand (Variable29 in (Variable16) or isempty(Variable16))),\nVariable64=sumif(Count, Variable25==265 and parse_version(Variable29) < parse_version(Variable17)\nand (Variable29 in (Variable16) or isempty(Variable16))),\nVariable65=sumif(Count, Variable25==271 and parse_version(Variable29) < parse_version(Variable17)\nand (Variable29 in (Variable16) or isempty(Variable16))),\nVariable66=sumif(Count, Variable25==277 and parse_version(Variable29) < parse_version(Variable17)\nand (Variable29 in (Variable16) or isempty(Variable16)))\n| Variable67 Variable68()\n| project Variable34=Variable69, Count=tolong(Variable70)\n| where Count > 0", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 = String5;\nDECLARE Variable5 = String6;\nDECLARE Variable6 = String7;\nDECLARE Variable7 = String8;\nDECLARE Variable8 = String9;\nDECLARE Variable9 STRING;\nDECLARE Variable10 STRING;\nUSE Variable11.Variable12;\nSET VAR Variable10 = (\nselect array_join(collect_list(output), String10)\nfrom FunctionOrTable1(Variable1, Variable2, Variable3, Variable4, Variable5, Variable6));\nSET VAR Variable9 = (\nselect max(FunctionOrTable2(Variable13)) as Variable13\nfrom (SELECT explode(transform(split(Variable14, String10), Variable15 -> rtrim(String11, Variable15))) AS Variable13));\nWITH Variable16 AS (\nSELECT \nVariable17:Variable18 AS Variable18,\nVariable17:Variable19 AS Variable20,\nVariable17:count AS Count,\nVariable17:Variable21 AS Variable21,\nCASE \nWHEN Variable17:Variable22 LIKE String12 THEN String13 \nELSE String14 \nEND AS Variable23\nFROM FunctionOrTable3\nWHERE \nTIME BETWEEN DATE_TRUNC(String15, Variable1) AND DATE_TRUNC(String15, DATE_ADD(Variable2, 1))\nAND Variable24 = String16\nAND Variable25 = String17\nAND Variable19 IS NOT NULL\nAND Variable19 IN (Variable10)\n),\nVariable26 AS (\nSELECT *\nFROM Variable16\nWHERE Variable23 = String13\nAND FunctionOrTable2(Variable21) <= FunctionOrTable2(Variable9)\nAND Variable18 IN (264, 265, 271, 277, 278, 706, 707, 1103, 1104, 1112, 2945, 2946, 2947, 552, 730)\n),\nVariable27 AS (\nSELECT *,\nCASE\nWHEN Variable18 = 264 THEN String18\nWHEN Variable18 = 265 THEN String19\nWHEN Variable18 = 271 THEN String20\nWHEN Variable18 = 277 THEN String21\nWHEN Variable18 = 278 THEN String22\nWHEN Variable18 = 564 THEN String23\nWHEN Variable18 = 706 THEN String24\nWHEN Variable18 = 707 THEN String25\nWHEN Variable18 = 1103 THEN String26\nWHEN Variable18 = 1104 THEN String27\nWHEN Variable18 = 1112 THEN String28\nWHEN Variable18 = 2945 THEN String29\nWHEN Variable18 = 2947 THEN String30\nELSE String9\nEND AS Variable28\nFROM Variable26\n),\nVariable29 AS (\nSELECT \nVariable21,\nVariable18,\nVariable28,\nSUM(CASE WHEN Variable18 = 706 AND FunctionOrTable2(Variable21) = FunctionOrTable2(Variable9) THEN Count ELSE 0 END) AS Variable30,\nSUM(CASE WHEN Variable18 = 706 AND FunctionOrTable2(Variable21) < FunctionOrTable2(Variable9) THEN Count ELSE 0 END) AS Variable31,\nSUM(CASE WHEN Variable18 = 707 AND FunctionOrTable2(Variable21) <= FunctionOrTable2(Variable9) AND (Variable8 IS NULL OR Variable21 IN (Variable8)) THEN Count ELSE 0 END) AS Variable32,\nSUM(CASE WHEN Variable18 = 265 AND FunctionOrTable2(Variable21) < FunctionOrTable2(Variable9) AND (Variable8 IS NULL OR Variable21 IN (Variable8)) THEN Count ELSE 0 END) AS Variable33,\nSUM(CASE WHEN Variable18 = 271 AND FunctionOrTable2(Variable21) < FunctionOrTable2(Variable9) AND (Variable8 IS NULL OR Variable21 IN (Variable8)) THEN Count ELSE 0 END) AS Variable34,\nSUM(CASE WHEN Variable18 = 277 AND FunctionOrTable2(Variable21) < FunctionOrTable2(Variable9) AND (Variable8 IS NULL OR Variable21 IN (Variable8)) THEN Count ELSE 0 END) AS Variable35\nFROM Variable27\nGROUP BY Variable21, Variable18, Variable28\n),\nVariable36 AS (\nSELECT String31 AS Variable28, Variable30 AS Count FROM Variable29 WHERE Variable30 > 0\nUNION ALL\nSELECT String32 AS Variable28, Variable31 AS Count FROM Variable29 WHERE Variable31 > 0\nUNION ALL\nSELECT String33 AS Variable28, Variable32 AS Count FROM Variable29 WHERE Variable32 > 0\nUNION ALL\nSELECT String34 AS Variable28, Variable33 AS Count FROM Variable29 WHERE Variable33 > 0\nUNION ALL\nSELECT String35 AS Variable28, Variable34 AS Count FROM Variable29 WHERE Variable34 > 0\nUNION ALL\nSELECT String36 AS Variable28, Variable35 AS Count FROM Variable29 WHERE Variable35 > 0\n)\nSELECT Variable28, Count\nFROM Variable36\nWHERE Count > 0"}, {"kql": "let Variable1 = dynamic(null);\nlet Variable2 = datetime(2024-07-19T07:11:25Z);\nlet Variable3 = datetime(2024-07-26T07:11:25Z);\nlet Variable4 = dynamic([String1, String2, String3]);\nlet Variable7 = Variable4;\nlet Variable8 = print Variable9=Variable1;\nlet Variable10 = dynamic(null);\nlet Variable11 = toscalar(Variable8 | Variable12-expand Variable9 \n| extend Variable9=tostring(Variable9)\n| extend Variable13=parse_version(Variable9)\n| summarize arg_max(Variable13, Variable9)\n| project Variable9);\nFunctionOrTable1\n| where TIME between (startofday(Variable2)..endofday(Variable3))\nand Variable14 == (String4) and Variable16 == String5 and isnotempty(Variable18)\nand Variable18 in (Variable7)\n| extend Variable19=tolong(Variable20.Variable19), Variable21=Variable18, Variable22=tostring(Variable20.Variable22)\n| extend Count=tolong(Variable20.[String6]) \n| extend Variable23=tostring(Variable20.Variable23)\n| extend Variable24 = iif(Variable22 contains String7, String7, String8)\n| where Variable24 contains String7\n| where parse_version(Variable23) <= parse_version(Variable11)\n| where Variable19 in (264,265,271,277,278,706,707,1103,1104,1112,2945,2946,2947,552,730)\n| extend Variable28= case(\nVariable19 == 264, String9,\nVariable19 == 265, String10,\nVariable19 == 271, String11,\nVariable19 == 277, String12,\nVariable19 == 278, String13,\nVariable19 == 564, String14,\nVariable19 == 706, String15,\nVariable19 == 707, String16,\nVariable19 == 1103, String17,\nVariable19 == 1104, String18,\nVariable19 == 1112, String19,\nVariable19 == 2945, String20,\nVariable19 == 2947, String21,String22)\n| project Variable21, Variable23, Variable19, Variable28, Count, Variable24, TIME\n| summarize\nVariable55=sumif(Count, Variable19==706 and parse_version(Variable23) == parse_version(Variable11)),\nVariable56=sumif(Count, Variable19==706 and parse_version(Variable23) < parse_version(Variable11)),\nVariable57=sumif(Count, Variable19==707 and parse_version(Variable23) <= parse_version(Variable11)\nand (Variable23 in (Variable10) or isempty(Variable10))),\nVariable58=sumif(Count, Variable19==265 and parse_version(Variable23) < parse_version(Variable11)\nand (Variable23 in (Variable10) or isempty(Variable10))),\nVariable59=sumif(Count, Variable19==271 and parse_version(Variable23) < parse_version(Variable11)\nand (Variable23 in (Variable10) or isempty(Variable10))),\nVariable60=sumif(Count, Variable19==277 and parse_version(Variable23) < parse_version(Variable11)\nand (Variable23 in (Variable10) or isempty(Variable10)))\nby bin(TIME, 1d)\n| extend Variable61=Variable55+Variable56+Variable57+Variable58+Variable59+Variable60\n| extend\nVariable55=round(toreal(Variable55)*100/Variable61,2),\nVariable56=round(toreal(Variable56)*100/Variable61,2),\nVariable57=round(toreal(Variable57)*100/Variable61,2),\nVariable58=round(toreal(Variable58)*100/Variable61,2),\nVariable59=round(toreal(Variable59)*100/Variable61,2),\nVariable60=round(toreal(Variable60)*100/Variable61,2)", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 = String5;\nDECLARE Variable5 = String6;\nDECLARE Variable6 STRING;\nUSE Variable7.Variable8;\nSET VAR Variable6 = (\nselect max(FunctionOrTable1(Variable9)) as Variable9\nfrom (SELECT explode(transform(split(Variable10, String7), Variable11 -> rtrim(String8, Variable11))) AS Variable9));\nWITH Variable12 AS (\nSELECT \nVariable13:Variable14 AS Variable14,\nVariable13:Variable15 AS Variable16,\nVariable13:count AS Count,\nVariable13:Variable17 AS Variable17,\nCASE \nWHEN Variable13:Variable18 LIKE String9 THEN String10 \nELSE String11 \nEND AS Variable19,\nTIME\nFROM Variable20\nWHERE \nTIME BETWEEN DATE_TRUNC(String12, Variable1) AND DATE_TRUNC(String12, DATE_ADD(Variable2, 1))\nAND Variable21 = String13\nAND Variable22 = String14\nAND Variable15 IS NOT NULL\nAND Variable15 IN (Variable3)\n),\nVariable23 AS (\nSELECT *\nFROM Variable12\nWHERE Variable19 = String10\nAND FunctionOrTable1(Variable17) <= FunctionOrTable1(Variable6)\nAND Variable14 IN (264, 265, 271, 277, 278, 706, 707, 1103, 1104, 1112, 2945, 2946, 2947, 552, 730)\n),\nVariable24 AS (\nSELECT *,\nCASE\nWHEN Variable14 = 264 THEN String15\nWHEN Variable14 = 265 THEN String16\nWHEN Variable14 = 271 THEN String17\nWHEN Variable14 = 277 THEN String18\nWHEN Variable14 = 278 THEN String19\nWHEN Variable14 = 564 THEN String20\nWHEN Variable14 = 706 THEN String21\nWHEN Variable14 = 707 THEN String22\nWHEN Variable14 = 1103 THEN String23\nWHEN Variable14 = 1104 THEN String24\nWHEN Variable14 = 1112 THEN String25\nWHEN Variable14 = 2945 THEN String26\nWHEN Variable14 = 2947 THEN String27\nELSE String6\nEND AS Variable25\nFROM Variable23\n),\nVariable26 AS (\nSELECT \nDATE_TRUNC(String28, TIME) AS TIME,\nSUM(CASE WHEN Variable14 = 706 AND FunctionOrTable1(Variable17) = FunctionOrTable1(Variable6) THEN Count ELSE 0 END) AS Variable27,\nSUM(CASE WHEN Variable14 = 706 AND FunctionOrTable1(Variable17) < FunctionOrTable1(Variable6) THEN Count ELSE 0 END) AS Variable28,\nSUM(CASE WHEN Variable14 = 707 AND FunctionOrTable1(Variable17) <= FunctionOrTable1(Variable6) AND (Variable5 IS NULL OR Variable17 IN (Variable5)) THEN Count ELSE 0 END) AS Variable29,\nSUM(CASE WHEN Variable14 = 265 AND FunctionOrTable1(Variable17) < FunctionOrTable1(Variable6) AND (Variable5 IS NULL OR Variable17 IN (Variable5)) THEN Count ELSE 0 END) AS Variable30,\nSUM(CASE WHEN Variable14 = 271 AND FunctionOrTable1(Variable17) < FunctionOrTable1(Variable6) AND (Variable5 IS NULL OR Variable17 IN (Variable5)) THEN Count ELSE 0 END) AS Variable31,\nSUM(CASE WHEN Variable14 = 277 AND FunctionOrTable1(Variable17) < FunctionOrTable1(Variable6) AND (Variable5 IS NULL OR Variable17 IN (Variable5)) THEN Count ELSE 0 END) AS Variable32\nFROM Variable24\nGROUP BY DATE_TRUNC(String28, TIME)\n),\nVariable33 AS (\nSELECT *,\n(Variable27 + Variable28 + Variable29 + Variable30 + Variable31 + Variable32) AS Variable34,\nROUND((Variable27 / (Variable27 + Variable28 + Variable29 + Variable30 + Variable31 + Variable32)) * 100, 2) AS Variable35,\nROUND((Variable28 / (Variable27 + Variable28 + Variable29 + Variable30 + Variable31 + Variable32)) * 100, 2) AS Variable36,\nROUND((Variable29 / (Variable27 + Variable28 + Variable29 + Variable30 + Variable31 + Variable32)) * 100, 2) AS Variable37,\nROUND((Variable30 / (Variable27 + Variable28 + Variable29 + Variable30 + Variable31 + Variable32)) * 100, 2) AS Variable38,\nROUND((Variable31 / (Variable27 + Variable28 + Variable29 + Variable30 + Variable31 + Variable32)) * 100, 2) AS Variable39,\nROUND((Variable32 / (Variable27 + Variable28 + Variable29 + Variable30 + Variable31 + Variable32)) * 100, 2) AS Variable40\nFROM Variable26\n)\nSELECT TIME, Variable35, Variable36, Variable37, Variable38, Variable39, Variable40\nFROM Variable33\nORDER BY TIME"}, {"kql": "let Variable1 = dynamic(null);\nlet Variable2 = String1;\nlet Variable4 = datetime(2024-07-19T07:12:34Z);\nlet Variable5 = datetime(2024-07-26T07:12:34Z);\nlet Variable6 = dynamic(null);\nlet Variable7 = dynamic([String2, String3, String4, String5, String6]);\nlet Variable10 = dynamic([String7, String8, String9]);\nlet Variable13 = toscalar(FunctionOrTable1(Variable4, Variable5,Variable2,Variable7,Variable10,Variable6));\nlet Variable14 = print Variable15=Variable1;\nlet Variable16 = dynamic(null);\nlet Variable17 = toscalar(Variable14 | Variable18-expand Variable15 \n| extend Variable15=tostring(Variable15)\n| extend Variable19=parse_version(Variable15)\n| summarize arg_max(Variable19, Variable15)\n| project Variable15);\nFunctionOrTable2\n| where TIME between (startofday(Variable4)..endofday(Variable5))\nand Variable20 == (String10) and Variable22 == String11 and isnotempty(Variable24)\nand Variable24 in (Variable13)\n| extend Variable25=tolong(Variable26.Variable25), Variable27=Variable24, Variable28=tostring(Variable26.Variable28)\n| extend Count=tolong(Variable26.[String12]) \n| extend Variable29=tostring(Variable26.Variable29)\n| extend Variable30 = iif(Variable28 contains String13, String13, String14)\n| where Variable30 contains String13\n| where parse_version(Variable29) <= parse_version(Variable17)\n| where Variable25 in (264,265,271,277,278,706,707,1103,1104,1112,2945,2946,2947,552,730)\n| extend Variable34= case(\nVariable25 == 264, String15,\nVariable25 == 265, String16,\nVariable25 == 271, String17,\nVariable25 == 277, String18,\nVariable25 == 278, String19,\nVariable25 == 564, String20,\nVariable25 == 706, String21,\nVariable25 == 707, String22,\nVariable25 == 1103, String23,\nVariable25 == 1104, String24,\nVariable25 == 1112, String25,\nVariable25 == 2945, String26,\nVariable25 == 2947, String27,String28)\n| project Variable27, Variable29, Variable25, Variable34, Count, Variable30, TIME\n| summarize\nVariable61=sumif(Count, Variable25==706 and parse_version(Variable29) == parse_version(Variable17)),\nVariable62=sumif(Count, Variable25==706 and parse_version(Variable29) < parse_version(Variable17)),\nVariable63=sumif(Count, Variable25==707 and parse_version(Variable29) <= parse_version(Variable17)\nand (Variable29 in (Variable16) or isempty(Variable16))),\nVariable64=sumif(Count, Variable25==265 and parse_version(Variable29) < parse_version(Variable17)\nand (Variable29 in (Variable16) or isempty(Variable16))),\nVariable65=sumif(Count, Variable25==271 and parse_version(Variable29) < parse_version(Variable17)\nand (Variable29 in (Variable16) or isempty(Variable16))),\nVariable66=sumif(Count, Variable25==277 and parse_version(Variable29) < parse_version(Variable17)\nand (Variable29 in (Variable16) or isempty(Variable16)))\nby bin(TIME, 1d)\n| extend Variable67=Variable61+Variable62+Variable63+Variable64+Variable65+Variable66\n| extend\nVariable61=round(toreal(Variable61)*100/Variable67,2),\nVariable62=round(toreal(Variable62)*100/Variable67,2),\nVariable63=round(toreal(Variable63)*100/Variable67,2),\nVariable64=round(toreal(Variable64)*100/Variable67,2),\nVariable65=round(toreal(Variable65)*100/Variable67,2),\nVariable66=round(toreal(Variable66)*100/Variable67,2)", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 = String5;\nDECLARE Variable5 = String6;\nDECLARE Variable6 = String7;\nDECLARE Variable7 = String8;\nDECLARE Variable8 = String9;\nDECLARE Variable9 STRING;\nDECLARE Variable10 STRING;\nUSE Variable11.Variable12;\nSET VAR Variable10 = (\nselect array_join(collect_list(output), String10)\nfrom FunctionOrTable1(Variable1, Variable2, Variable3, Variable4, Variable5, Variable6));\nSET VAR Variable9 = (\nselect max(FunctionOrTable2(Variable13)) as Variable13\nfrom (SELECT explode(transform(split(Variable14, String10), Variable15 -> rtrim(String11, Variable15))) AS Variable13));\nWITH Variable16 AS (\nSELECT \nVariable17:Variable18 AS Variable18,\nVariable17:Variable19 AS Variable20,\nVariable17:count AS Count,\nVariable17:Variable21 AS Variable21,\nCASE \nWHEN Variable17:Variable22 LIKE String12 THEN String13 \nELSE String14 \nEND AS Variable23,\nTIME\nFROM FunctionOrTable3\nWHERE \nTIME BETWEEN DATE_TRUNC(String15, Variable1) AND DATE_TRUNC(String15, DATE_ADD(Variable2, 1))\nAND Variable24 = String16\nAND Variable25 = String17\nAND Variable19 IS NOT NULL\nAND Variable19 IN (Variable10)\n),\nVariable26 AS (\nSELECT *\nFROM Variable16\nWHERE Variable23 = String13\nAND FunctionOrTable2(Variable21) <= FunctionOrTable2(Variable9)\nAND Variable18 IN (264, 265, 271, 277, 278, 706, 707, 1103, 1104, 1112, 2945, 2946, 2947, 552, 730)\n),\nVariable27 AS (\nSELECT *,\nCASE\nWHEN Variable18 = 264 THEN String18\nWHEN Variable18 = 265 THEN String19\nWHEN Variable18 = 271 THEN String20\nWHEN Variable18 = 277 THEN String21\nWHEN Variable18 = 278 THEN String22\nWHEN Variable18 = 564 THEN String23\nWHEN Variable18 = 706 THEN String24\nWHEN Variable18 = 707 THEN String25\nWHEN Variable18 = 1103 THEN String26\nWHEN Variable18 = 1104 THEN String27\nWHEN Variable18 = 1112 THEN String28\nWHEN Variable18 = 2945 THEN String29\nWHEN Variable18 = 2947 THEN String30\nELSE String9\nEND AS Variable28\nFROM Variable26\n),\nVariable29 AS (\nSELECT \nDATE_TRUNC(String31, TIME) AS TIME,\nSUM(CASE WHEN Variable18 = 706 AND FunctionOrTable2(Variable21) = FunctionOrTable2(Variable9) THEN Count ELSE 0 END) AS Variable30,\nSUM(CASE WHEN Variable18 = 706 AND FunctionOrTable2(Variable21) < FunctionOrTable2(Variable9) THEN Count ELSE 0 END) AS Variable31,\nSUM(CASE WHEN Variable18 = 707 AND FunctionOrTable2(Variable21) <= FunctionOrTable2(Variable9) AND (Variable8 IS NULL OR Variable21 IN (Variable8)) THEN Count ELSE 0 END) AS Variable32,\nSUM(CASE WHEN Variable18 = 265 AND FunctionOrTable2(Variable21) < FunctionOrTable2(Variable9) AND (Variable8 IS NULL OR Variable21 IN (Variable8)) THEN Count ELSE 0 END) AS Variable33,\nSUM(CASE WHEN Variable18 = 271 AND FunctionOrTable2(Variable21) < FunctionOrTable2(Variable9) AND (Variable8 IS NULL OR Variable21 IN (Variable8)) THEN Count ELSE 0 END) AS Variable34,\nSUM(CASE WHEN Variable18 = 277 AND FunctionOrTable2(Variable21) < FunctionOrTable2(Variable9) AND (Variable8 IS NULL OR Variable21 IN (Variable8)) THEN Count ELSE 0 END) AS Variable35\nFROM Variable27\nGROUP BY DATE_TRUNC(String31, TIME)\n),\nVariable36 AS (\nSELECT *,\n(Variable30 + Variable31 + Variable32 + Variable33 + Variable34 + Variable35) AS Variable37,\nROUND((Variable30 / (Variable30 + Variable31 + Variable32 + Variable33 + Variable34 + Variable35)) * 100, 2) AS Variable38,\nROUND((Variable31 / (Variable30 + Variable31 + Variable32 + Variable33 + Variable34 + Variable35)) * 100, 2) AS Variable39,\nROUND((Variable32 / (Variable30 + Variable31 + Variable32 + Variable33 + Variable34 + Variable35)) * 100, 2) AS Variable40,\nROUND((Variable33 / (Variable30 + Variable31 + Variable32 + Variable33 + Variable34 + Variable35)) * 100, 2) AS Variable41,\nROUND((Variable34 / (Variable30 + Variable31 + Variable32 + Variable33 + Variable34 + Variable35)) * 100, 2) AS Variable42,\nROUND((Variable35 / (Variable30 + Variable31 + Variable32 + Variable33 + Variable34 + Variable35)) * 100, 2) AS Variable43\nFROM Variable29\n)\nSELECT TIME, Variable38, Variable39, Variable40, Variable41, Variable42, Variable43\nFROM Variable36\nORDER BY TIME"}, {"kql": "let Variable1 = dynamic(null);\nlet Variable2 = datetime(2024-07-19T07:19:19Z);\nlet Variable3 = datetime(2024-07-26T07:19:19Z);\nlet Variable4 = dynamic([String1, String2, String3, String4, String5]);\nFunctionOrTable1(Variable2, Variable3, Variable4, dynamic(null), Variable1)\n| union (FunctionOrTable2(Variable2, Variable3, Variable4, dynamic(null)) | extend Variable7 = String6)", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 BOOLEAN;\nDECLARE Variable5 = String5;\nselect *\nfrom FunctionOrTable1(Variable1, Variable2, Variable3, String6, Variable5)"}, {"kql": "let Variable1 = dynamic(null);\nlet Variable2 = datetime(2024-07-19T07:20:14Z);\nlet Variable3 = datetime(2024-07-26T07:20:14Z);\nlet Variable4 = dynamic([String1, String2, String3]);\nFunctionOrTable1(Variable2, Variable3, dynamic(null), Variable4, Variable1)\n| union (FunctionOrTable2(Variable2, Variable3, dynamic(null), Variable4) | extend Variable7 = String4)", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 BOOLEAN;\nDECLARE Variable5 = String5;\nselect *\nfrom FunctionOrTable1(Variable1, Variable2, String6, Variable3, Variable5)"}, {"kql": "let Variable1 = dynamic(null);\nlet Variable2 = String1;\nlet Variable4 = datetime(2024-07-19T07:20:53Z);\nlet Variable5 = datetime(2024-07-26T07:20:53Z);\nlet Variable6 = dynamic(null);\nlet Variable7 = dynamic([String2, String3, String4, String5, String6]);\nlet Variable10 = dynamic([String7, String8, String9]);\nlet Variable13 = toscalar(FunctionOrTable1(Variable4, Variable5,Variable2,Variable7,Variable10,Variable6));\nFunctionOrTable2(Variable4, Variable5, dynamic(null), Variable13, Variable1)\n| union (FunctionOrTable3(Variable4, Variable5, dynamic(null), Variable13) | extend Variable14 = String10)", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 = String5;\nDECLARE Variable5 = String6;\nDECLARE Variable6 = String7;\nDECLARE Variable7 STRING;\nDECLARE Variable8 = String8;\nSET VAR Variable7 = (\nselect array_join(collect_list(output), String9)\nfrom FunctionOrTable1(Variable1, Variable2, Variable3, Variable4, Variable5, Variable6));\nselect *\nfrom FunctionOrTable2(Variable1, Variable2, String10, Variable7, Variable8)"}, {"kql": "let Variable1 = dynamic(null);\nlet Variable2 = datetime(2024-07-19T07:21:34Z);\nlet Variable3 = datetime(2024-07-26T07:21:34Z);\nlet Variable4 = dynamic([String1, String2, String3, String4, String5]);\nlet Variable7 = 1;\nlet Variable8 = FunctionOrTable1(Variable2, Variable3, Variable4, dynamic(null), Variable1)\n| where Variable7 == true\n| extend Variable9 = String6\n| extend Variable10 = iff(Variable11 > 1.5, String7, String8)\n| project Variable14, Variable15=Variable9, Variable16=Variable10;\nlet Variable17 = FunctionOrTable2(Variable2, Variable3, Variable4, dynamic(null), Variable1)\n| where Variable7 == true\n| extend Variable9 = String9\n| extend Variable10 = iff(Variable18 > 1, String7, String8)\n| project Variable14, Variable15=Variable9, Variable16=Variable10;\nlet Variable19 = FunctionOrTable3(Variable2, Variable3, Variable4, dynamic(null), Variable1)\n| where Variable7 == true\n| extend Variable9 = String10\n| extend Variable10 = iff(Variable18 > 0.5, String7, String8)\n| project Variable14, Variable15=Variable9, Variable16=Variable10;\nlet FunctionOrTable4 = FunctionOrTable4(Variable2, Variable3, Variable4, dynamic(null), Variable1)\n| where Variable7 == true\n| extend Variable9 = String11\n| extend Variable10 = iff(Variable18 >= 2, String7, String8)\n| project Variable14, Variable15=Variable9, Variable16=Variable10;\nlet Variable21 = FunctionOrTable5(Variable2, Variable3, Variable4, dynamic(null), Variable1)\n| where Variable7 == true\n| extend Variable9 = String12\n| extend Variable10 = iff(Variable11 > 5, String7, String8)\n| project Variable14, Variable15=Variable9, Variable16=Variable10;\nlet Variable22 = FunctionOrTable6(Variable2, Variable3, Variable4, dynamic(null), Variable1)\n| where Variable7 == true\n| extend Variable9 = String13\n| extend Variable10 = iff(Variable18 >= 5, String7, String8)\n| project Variable14, Variable15=Variable9, Variable16=Variable10;\nlet Variable23=FunctionOrTable7(Variable2, Variable3, Variable4, dynamic(null), Variable1)\n| where Variable24==String14\n| extend Variable9=String15\n| extend Variable10 = iff(Variable29 > 1, String7, String8)\n| project Variable14, Variable15=Variable9, Variable16=Variable10;\nlet Variable30 = union Variable8, Variable17, Variable19,\nVariable31,\nVariable21, Variable22;\nVariable30\n| order by Variable15 asc", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 BOOLEAN;\nDECLARE Variable5 = String5;\nSET VAR Variable4 = true;\ncreate or replace temporary view Variable6 as (\nSELECT Variable7, String6 as Type, case when Variable8 > 1.5 then String7 else String8 end as Variable9\nfrom FunctionOrTable1(Variable1, Variable2, Variable3, String9, Variable5)\nwhere Variable4 = true\n);\ncreate or replace temporary view Variable10 as (\nSELECT Variable7, String10 as Type, case when Variable11 > 1 then String7 else String8 end as Variable9\nfrom FunctionOrTable2(Variable1, Variable2, Variable3, String9, Variable5)\nwhere Variable4 = true\n);\ncreate or replace temporary view Variable12 as (\nSELECT Variable7, String11 as Type, case when Variable11 > 0.5 then String7 else String8 end as Variable9\nfrom FunctionOrTable3(Variable1, Variable2, Variable3, String9, Variable5)\nwhere Variable4 = true\n);\ncreate or replace temporary view FunctionOrTable4 as (\nSELECT Variable7, String12 as Type, case when Variable11 >= 2 then String7 else String8 end as Variable9\nfrom FunctionOrTable4(Variable1, Variable2, Variable3, String9, Variable5)\nwhere Variable4 = true\n);\ncreate or replace temporary view Variable13 as (\nSELECT Variable7, String13 as Type, case when Variable8 > 5 then String7 else String8 end as Variable9\nfrom FunctionOrTable5(Variable1, Variable2, Variable3, String9, Variable5)\nwhere Variable4 = true\n);\ncreate or replace temporary view Variable14 as (\nSELECT Variable7, String14 as Type, case when Variable11 >= 5 then String7 else String8 end as Variable9\nfrom FunctionOrTable6(Variable1, Variable2, Variable3, String9, Variable5)\nwhere Variable4 = true\n);\ncreate or replace temporary view Variable15 as (\nSELECT * \nFROM Variable6\nUNION ALL\nSELECT * \nFROM Variable10\nUNION ALL\nSELECT * \nFROM Variable12\nUNION ALL\nSELECT * \nFROM FunctionOrTable4\nUNION ALL\nSELECT * \nFROM Variable13\nUNION ALL\nSELECT * \nFROM Variable14\n);\nselect *\nfrom Variable15\norder by Type"}, {"kql": "let Variable1 = dynamic(null);\nlet Variable2 = datetime(2024-07-19T07:22:27Z);\nlet Variable3 = datetime(2024-07-26T07:22:27Z);\nlet Variable4 = dynamic([String1, String2, String3]);\nlet Variable7 = 1;\nlet Variable8 = FunctionOrTable1(Variable2, Variable3, dynamic(null), Variable4, Variable1)\n| where Variable7 == true\n| extend Variable9 = String4\n| extend Variable10 = iff(Variable11 > 1.5, String5, String6)\n| project Variable14, Variable15=Variable9, Variable16=Variable10;\nlet Variable17 = FunctionOrTable2(Variable2, Variable3, dynamic(null), Variable4, Variable1)\n| where Variable7 == true\n| extend Variable9 = String7\n| extend Variable10 = iff(Variable18 > 1, String5, String6)\n| project Variable14, Variable15=Variable9, Variable16=Variable10;\nlet Variable19 = FunctionOrTable3(Variable2, Variable3, dynamic(null), Variable4, Variable1)\n| where Variable7 == true\n| extend Variable9 = String8\n| extend Variable10 = iff(Variable18 > 0.5, String5, String6)\n| project Variable14, Variable15=Variable9, Variable16=Variable10;\nlet FunctionOrTable4 = FunctionOrTable4(Variable2, Variable3, dynamic(null), Variable4, Variable1)\n| where Variable7 == true\n| extend Variable9 = String9\n| extend Variable10 = iff(Variable18 >= 2, String5, String6)\n| project Variable14, Variable15=Variable9, Variable16=Variable10;\nlet Variable21 = FunctionOrTable5(Variable2, Variable3, dynamic(null), Variable4, Variable1)\n| where Variable7 == true\n| extend Variable9 = String10\n| extend Variable10 = iff(Variable11 > 5, String5, String6)\n| project Variable14, Variable15=Variable9, Variable16=Variable10;\nlet Variable22 = FunctionOrTable6(Variable2, Variable3, dynamic(null), Variable4, Variable1)\n| where Variable7 == true\n| extend Variable9 = String11\n| extend Variable10 = iff(Variable18 >= 5, String5, String6)\n| project Variable14, Variable15=Variable9, Variable16=Variable10;\nlet Variable23=FunctionOrTable7(Variable2, Variable3, dynamic(null), Variable4, Variable1)\n| where Variable24==String12\n| extend Variable9=String13\n| extend Variable10 = iff(Variable27 > 1, String5, String6)\n| project Variable14, Variable15=Variable9, Variable16=Variable10;\nlet Variable28=Variable29(Variable2, Variable3, dynamic(null), Variable4, Variable1)\n| where Variable24==String12\n| extend Variable9=String14\n| extend Variable10 = iff(Variable27 > 1, String5, String6)\n| project Variable14, Variable15=Variable9, Variable16=Variable10;\nlet Variable31 = union Variable8, Variable17, Variable19, Variable32,\nVariable21, Variable22,\nVariable23, Variable28;\nVariable31\n| order by Variable15 asc", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 BOOLEAN;\nDECLARE Variable5 = String5;\nSET VAR Variable4 = true;\ncreate or replace temporary view Variable6 as (\nSELECT Variable7, String6 as Type, case when Variable8 > 1.5 then String7 else String8 end as Variable9\nfrom FunctionOrTable1(Variable1, Variable2, String9, Variable3, Variable5)\nwhere Variable4 = true\n);\ncreate or replace temporary view Variable10 as (\nSELECT Variable7, String10 as Type, case when Variable11 > 1 then String7 else String8 end as Variable9\nfrom FunctionOrTable2(Variable1, Variable2, String9, Variable3, Variable5)\nwhere Variable4 = true\n);\ncreate or replace temporary view Variable12 as (\nSELECT Variable7, String11 as Type, case when Variable11 > 0.5 then String7 else String8 end as Variable9\nfrom FunctionOrTable3(Variable1, Variable2, String9, Variable3, Variable5)\nwhere Variable4 = true\n);\ncreate or replace temporary view FunctionOrTable4 as (\nSELECT Variable7, String12 as Type, case when Variable11 >= 2 then String7 else String8 end as Variable9\nfrom FunctionOrTable4(Variable1, Variable2, String9, Variable3, Variable5)\nwhere Variable4 = true\n);\ncreate or replace temporary view Variable13 as (\nSELECT Variable7, String13 as Type, case when Variable8 > 5 then String7 else String8 end as Variable9\nfrom FunctionOrTable5(Variable1, Variable2, String9, Variable3, Variable5)\nwhere Variable4 = true\n);\ncreate or replace temporary view Variable14 as (\nSELECT Variable7, String14 as Type, case when Variable11 >= 5 then String7 else String8 end as Variable9\nfrom FunctionOrTable6(Variable1, Variable2, String9, Variable3, Variable5)\nwhere Variable4 = true\n);\ncreate or replace temporary view Variable15 as (\nSELECT * \nFROM Variable6\nUNION ALL\nSELECT * \nFROM Variable10\nUNION ALL\nSELECT * \nFROM Variable12\nUNION ALL\nSELECT * \nFROM FunctionOrTable4\nUNION ALL\nSELECT * \nFROM Variable13\nUNION ALL\nSELECT * \nFROM Variable14\n);\nselect *\nfrom Variable15\norder by Type"}, {"kql": "let Variable1 = dynamic(null);\nlet Variable2 = String1;\nlet Variable4 = datetime(2024-07-19T07:23:30Z);\nlet Variable5 = datetime(2024-07-26T07:23:30Z);\nlet Variable6 = dynamic(null);\nlet Variable7 = dynamic([String2, String3, String4, String5, String6]);\nlet Variable10 = dynamic([String7, String8, String9]);\nlet Variable13 = 1;\nlet Variable14 = toscalar(FunctionOrTable1(Variable4, Variable5,Variable2,Variable7,Variable10,Variable6));\nlet Variable15 = FunctionOrTable2(Variable4, Variable5, dynamic(null), Variable14, Variable1)\n| where Variable13 == true\n| extend Variable16 = String10\n| extend Variable17 = iff(Variable18 > 1.5, String11, String12)\n| project Variable21, Variable22=Variable16, Variable23=Variable17;\nlet Variable24 = FunctionOrTable3(Variable4, Variable5, dynamic(null), Variable14, Variable1)\n| where Variable13 == true\n| extend Variable16 = String13\n| extend Variable17 = iff(Variable25 > 1, String11, String12)\n| project Variable21, Variable22=Variable16, Variable23=Variable17;\nlet Variable26 = FunctionOrTable4(Variable4, Variable5, dynamic(null), Variable14, Variable1)\n| where Variable13 == true\n| extend Variable16 = String14\n| extend Variable17 = iff(Variable25 > 0.5, String11, String12)\n| project Variable21, Variable22=Variable16, Variable23=Variable17;\nlet FunctionOrTable5 = FunctionOrTable5(Variable4, Variable5, dynamic(null), Variable14, Variable1)\n| where Variable13 == true\n| extend Variable16 = String15\n| extend Variable17 = iff(Variable25 >= 2, String11, String12)\n| project Variable21, Variable22=Variable16, Variable23=Variable17;\nlet Variable28 = FunctionOrTable6(Variable4, Variable5, dynamic(null), Variable14, Variable1)\n| where Variable13 == true\n| extend Variable16 = String16\n| extend Variable17 = iff(Variable18 > 5, String11, String12)\n| project Variable21, Variable22=Variable16, Variable23=Variable17;\nlet Variable29 = FunctionOrTable7(Variable4, Variable5, dynamic(null), Variable14, Variable1)\n| where Variable13 == true\n| extend Variable16 = String17\n| extend Variable17 = iff(Variable25 >= 5, String11, String12)\n| project Variable21, Variable22=Variable16, Variable23=Variable17;\nlet Variable30=FunctionOrTable8(Variable4, Variable5, dynamic(null), Variable14, Variable1)\n| where Variable31==String18\n| extend Variable16=String19\n| extend Variable17 = iff(Variable36 > 1, String11, String12)\n| project Variable21, Variable22=Variable16, Variable23=Variable17;\nlet Variable37=Variable38(Variable4, Variable5, dynamic(null), Variable14, Variable1)\n| where Variable31==String18\n| extend Variable16=String20\n| extend Variable17 = iff(Variable36 > 1, String11, String12)\n| project Variable21, Variable22=Variable16, Variable23=Variable17;\nlet Variable40 = union Variable15, Variable24, Variable26, Variable41,\nVariable28, Variable29,\nVariable30, Variable37;\nVariable40\n| order by Variable22 asc", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 = String5;\nDECLARE Variable5 = String6;\nDECLARE Variable6 = String7;\nDECLARE Variable7 STRING;\nDECLARE Variable8 BOOLEAN;\nDECLARE Variable9 = String8;\nSET VAR Variable8 = true;\nSET VAR Variable7 = (\nselect array_join(collect_list(output), String9)\nfrom FunctionOrTable1(Variable1, Variable2, Variable3, Variable4, Variable5, Variable6));\ncreate or replace temporary view Variable10 as (\nSELECT Variable11, String10 as Type, case when Variable12 > 1.5 then String11 else String12 end as Variable13\nfrom FunctionOrTable2(Variable1, Variable2, String13, Variable7, Variable9)\nwhere Variable8 = true\n);\ncreate or replace temporary view Variable14 as (\nSELECT Variable11, String14 as Type, case when Variable15 > 1 then String11 else String12 end as Variable13\nfrom FunctionOrTable3(Variable1, Variable2, String13, Variable7, Variable9)\nwhere Variable8 = true\n);\ncreate or replace temporary view Variable16 as (\nSELECT Variable11, String15 as Type, case when Variable15 > 0.5 then String11 else String12 end as Variable13\nfrom FunctionOrTable4(Variable1, Variable2, String13, Variable7, Variable9)\nwhere Variable8 = true\n);\ncreate or replace temporary view FunctionOrTable5 as (\nSELECT Variable11, String16 as Type, case when Variable15 >= 2 then String11 else String12 end as Variable13\nfrom FunctionOrTable5(Variable1, Variable2, String13, Variable7, Variable9)\nwhere Variable8 = true\n);\ncreate or replace temporary view Variable17 as (\nSELECT Variable11, String17 as Type, case when Variable12 > 5 then String11 else String12 end as Variable13\nfrom FunctionOrTable6(Variable1, Variable2, String13, Variable7, Variable9)\nwhere Variable8 = true\n);\ncreate or replace temporary view Variable18 as (\nSELECT Variable11, String18 as Type, case when Variable15 >= 5 then String11 else String12 end as Variable13\nfrom FunctionOrTable7(Variable1, Variable2, String13, Variable7, Variable9)\nwhere Variable8 = true\n);\ncreate or replace temporary view Variable19 as (\nSELECT * \nFROM Variable10\nUNION ALL\nSELECT * \nFROM Variable14\nUNION ALL\nSELECT * \nFROM Variable16\nUNION ALL\nSELECT * \nFROM FunctionOrTable5\nUNION ALL\nSELECT * \nFROM Variable17\nUNION ALL\nSELECT * \nFROM Variable18\n);\nselect *\nfrom Variable19\norder by Type"}, {"kql": "let Variable1 = dynamic(null);\nlet Variable2 = datetime(2024-07-19T07:24:29Z);\nlet Variable3 = datetime(2024-07-26T07:24:29Z);\nlet Variable4 = dynamic([String1, String2, String3, String4, String5]);\nlet Variable7 = dynamic([String6, String7, String8]);\nlet Variable10=Variable4;\nlet Variable11=Variable7;\nFunctionOrTable1\n| where TIME between (Variable2..Variable3)\nand Variable12 in (Variable10)\nand (Variable13 in (Variable1) or isempty(Variable1))\n| summarize Count = dcount(Variable14) by bin(TIME, 1h), Variable15\n| summarize Count = max(Count) by Variable15\n| Variable16 Variable17.Variable18=true Variable19 | extend Variable20= toscalar(Variable19 | summarize sum(Count))\n| extend Variable21=strcat(round(Count*100.0/Variable20,2),String9)\n| order by Count desc\n| project Variable22=Variable15, Count, Variable21", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 = String5;\nWITH Variable5 AS (\nSELECT \nDATE_TRUNC(String6, TIME) AS Variable6,\nVariable7, \nCOUNT(DISTINCT Variable8) AS Count\nFROM FunctionOrTable1\nWHERE TIME BETWEEN Variable1 AND Variable2\nAND array_contains(split(Variable3, String7), uuid)\nAND (length(Variable4) = 0 OR array_contains(transform(split(Variable4, String7), Variable9 -> rtrim(String8, Variable9)), Variable10))\nGROUP BY DATE_TRUNC(String6, TIME), Variable7\n),\nVariable11 AS (\nSELECT \nVariable7, \nMAX(Count) AS Count\nFROM Variable5\nGROUP BY Variable7\n),\nVariable12 AS (\nSELECT SUM(Count) AS Variable13 FROM Variable11\n),\nVariable14 AS (\nSELECT \nVariable15.Variable7 AS Variable16, \nVariable15.Count, \nCONCAT(ROUND(Variable15.Count * 100.0 / Variable17.Variable13, 2), String9) AS Variable18\nFROM Variable11 Variable15, Variable12 Variable17\n)\nSELECT Variable16, Count, Variable18\nFROM Variable14\nORDER BY Count DESC"}, {"kql": "let Variable1 = dynamic(null);\nlet Variable2 = datetime(2024-07-19T07:25:18Z);\nlet Variable3 = datetime(2024-07-26T07:25:18Z);\nlet Variable4 = dynamic([String1, String2, String3]);\nlet Variable7=Variable4;\nFunctionOrTable1\n| where TIME between (Variable2..Variable3)\nand Variable8 in (Variable7)\nand (Variable9 in (Variable1) or isempty(Variable1))\n| summarize Count = dcount(Variable10) by bin(TIME, 1h), Variable11\n| summarize Count = max(Count) by Variable11\n| Variable12 Variable13.Variable14=true Variable15 | extend Variable16= toscalar(Variable15 | summarize sum(Count))\n| extend Variable17=strcat(round(Count*100.0/Variable16,2),String4)\n| order by Count desc\n| project Variable18=Variable11, Count, Variable17", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 = String5;\nWITH Variable5 AS (\nSELECT \nDATE_TRUNC(String6, TIME) AS Variable6,\nVariable7, \nCOUNT(DISTINCT Variable8) AS Count\nFROM FunctionOrTable1\nWHERE TIME BETWEEN Variable1 AND Variable2\nAND array_contains(split(Variable3, String7), Variable9)\nAND (length(Variable4) = 0 OR array_contains(transform(split(Variable4, String7), Variable10 -> rtrim(String8, Variable10)), Variable11))\nGROUP BY DATE_TRUNC(String6, TIME), Variable7\n),\nVariable12 AS (\nSELECT \nVariable7, \nMAX(Count) AS Count\nFROM Variable5\nGROUP BY Variable7\n),\nVariable13 AS (\nSELECT SUM(Count) AS Variable14 FROM Variable12\n),\nVariable15 AS (\nSELECT \nVariable16.Variable7 AS Variable17, \nVariable16.Count, \nCONCAT(ROUND(Variable16.Count * 100.0 / Variable18.Variable14, 2), String9) AS Variable19\nFROM Variable12 Variable16, Variable13 Variable18\n)\nSELECT Variable17, Count, Variable19\nFROM Variable15\nORDER BY Count DESC"}, {"kql": "let Variable1 = dynamic(null);\nlet Variable2 = String1;\nlet Variable4 = datetime(2024-07-19T07:26:24Z);\nlet Variable5 = datetime(2024-07-26T07:26:24Z);\nlet Variable6 = dynamic(null);\nlet Variable7 = dynamic([String2, String3, String4, String5, String6]);\nlet Variable10 = dynamic([String7, String8, String9]);\nlet Variable13 = toscalar(FunctionOrTable1(Variable4, Variable5,Variable2,Variable7,Variable10,Variable6));\nlet Variable14=Variable13;\nFunctionOrTable2\n| where TIME between (Variable4..Variable5)\nand Variable15 in (Variable14)\nand (Variable16 in (Variable1) or isempty(Variable1))\n| summarize Count = dcount(Variable17) by bin(TIME, 1h), Variable18\n| summarize Count = max(Count) by Variable18\n| Variable19 Variable20.Variable21=true Variable22 | extend Variable23= toscalar(Variable22 | summarize sum(Count))\n| extend Variable24=strcat(round(Count*100.0/Variable23,2),String10)\n| order by Count desc\n| project Variable25=Variable18, Count, Variable24", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 = String5;\nDECLARE Variable5 = String6;\nDECLARE Variable6 = String7;\nDECLARE Variable7 STRING;\nDECLARE Variable8 = String8;\nSET VAR Variable7 = (\nselect array_join(collect_list(output), String9)\nfrom FunctionOrTable1(Variable1, Variable2, Variable3, Variable4, Variable5, Variable6));\nWITH Variable9 AS (\nSELECT \nDATE_TRUNC(String10, TIME) AS Variable10,\nVariable11, \nCOUNT(DISTINCT Variable12) AS Count\nFROM FunctionOrTable2\nWHERE TIME BETWEEN Variable1 AND Variable2\nAND array_contains(split(Variable7, String9), Variable13)\nAND (length(Variable8) = 0 OR array_contains(transform(split(Variable8, String9), Variable14 -> rtrim(String11, Variable14)), Variable15))\nGROUP BY DATE_TRUNC(String10, TIME), Variable11\n),\nVariable16 AS (\nSELECT \nVariable11, \nMAX(Count) AS Count\nFROM Variable9\nGROUP BY Variable11\n),\nVariable17 AS (\nSELECT SUM(Count) AS Variable18 FROM Variable16\n),\nVariable19 AS (\nSELECT \nVariable20.Variable11 AS Variable21, \nVariable20.Count, \nCONCAT(ROUND(Variable20.Count * 100.0 / Variable22.Variable18, 2), String12) AS Variable23\nFROM Variable16 Variable20, Variable17 Variable22\n)\nSELECT Variable21, Count, Variable23\nFROM Variable19\nORDER BY Count DESC"}, {"kql": "let Variable1 = dynamic(null);\nlet Variable2 = datetime(2024-07-19T07:27:30Z);\nlet Variable3 = datetime(2024-07-26T07:27:30Z);\nlet Variable4 = dynamic([String1, String2, String3, String4, String5]);\nlet Variable7=Variable4;\nFunctionOrTable1\n| where TIME between (Variable2..Variable3)\nand Variable8 in (Variable7)\nand (Variable9 in (Variable1) or isempty(Variable1))\n| summarize Count = dcount(Variable10) by bin(TIME, 1h), Variable11\n| summarize Count = max(Count) by Variable11\n| Variable12 Variable13.Variable14=true Variable15 | extend Variable16= toscalar(Variable15 | summarize sum(Count))\n| extend Variable17=strcat(round(Count*100.0/Variable16,2),String6)\n| order by Count desc\n| project Variable18=Variable11, Count, Variable17", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 = String5;\nWITH Variable5 AS (\nSELECT \nDATE_TRUNC(String6, TIME) AS Variable6,\nVariable7, \nCOUNT(DISTINCT Variable8) AS Count\nFROM FunctionOrTable1\nWHERE TIME BETWEEN Variable1 AND Variable2\nAND array_contains(split(Variable3, String7), uuid)\nAND (length(Variable4) = 0 OR array_contains(transform(split(Variable4, String7), Variable9 -> rtrim(String8, Variable9)), Variable10))\nGROUP BY DATE_TRUNC(String6, TIME), Variable7\n),\nVariable11 AS (\nSELECT \nVariable7, \nMAX(Count) AS Count\nFROM Variable5\nGROUP BY Variable7\n),\nVariable12 AS (\nSELECT SUM(Count) AS Variable13 FROM Variable11\n),\nVariable14 AS (\nSELECT \nVariable15.Variable7 AS Variable16, \nVariable15.Count, \nCONCAT(ROUND(Variable15.Count * 100.0 / Variable17.Variable13, 2), String9) AS Variable18\nFROM Variable11 Variable15, Variable12 Variable17\n)\nSELECT Variable16, Count, Variable18\nFROM Variable14\nORDER BY Count DESC"}, {"kql": "let Variable1 = dynamic(null);\nlet Variable2 = datetime(2024-07-19T07:28:44Z);\nlet Variable3 = datetime(2024-07-26T07:28:44Z);\nlet Variable4 = dynamic([String1, String2, String3]);\nlet Variable7=Variable4;\nFunctionOrTable1\n| where TIME between (Variable2..Variable3)\nand Variable8 in (Variable7)\nand (Variable9 in (Variable1) or isempty(Variable1))\n| summarize Count = dcount(Variable10) by bin(TIME, 1h), Variable11\n| summarize Count = max(Count) by Variable11\n| Variable12 Variable13.Variable14=true Variable15 | extend Variable16= toscalar(Variable15 | summarize sum(Count))\n| extend Variable17=strcat(round(Count*100.0/Variable16,2),String4)\n| order by Count desc\n| project Variable18=Variable11, Count, Variable17", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 = String5;\nWITH Variable5 AS (\nSELECT \nDATE_TRUNC(String6, TIME) AS Variable6,\nVariable7, \nCOUNT(DISTINCT Variable8) AS Count\nFROM FunctionOrTable1\nWHERE TIME BETWEEN Variable1 AND Variable2\nAND array_contains(split(Variable3, String7), Variable9)\nAND (length(Variable4) = 0 OR array_contains(transform(split(Variable4, String7), Variable10 -> rtrim(String8, Variable10)), Variable11))\nGROUP BY DATE_TRUNC(String6, TIME), Variable7\n),\nVariable12 AS (\nSELECT \nVariable7, \nMAX(Count) AS Count\nFROM Variable5\nGROUP BY Variable7\n),\nVariable13 AS (\nSELECT SUM(Count) AS Variable14 FROM Variable12\n),\nVariable15 AS (\nSELECT \nVariable16.Variable7 AS Variable17, \nVariable16.Count, \nCONCAT(ROUND(Variable16.Count * 100.0 / Variable18.Variable14, 2), String9) AS Variable19\nFROM Variable12 Variable16, Variable13 Variable18\n)\nSELECT Variable17, Count, Variable19\nFROM Variable15\nORDER BY Count DESC"}, {"kql": "let Variable1 = dynamic(null);\nlet Variable2 = String1;\nlet Variable4 = datetime(2024-07-19T07:29:28Z);\nlet Variable5 = datetime(2024-07-26T07:29:28Z);\nlet Variable6 = dynamic(null);\nlet Variable7 = dynamic([String2, String3, String4, String5, String6]);\nlet Variable10 = dynamic([String7, String8, String9]);\nlet Variable13 = toscalar(FunctionOrTable1(Variable4, Variable5,Variable2,Variable7,Variable10,Variable6));\nlet Variable14=Variable13;\nFunctionOrTable2\n| where TIME between (Variable4..Variable5)\nand Variable15 in (Variable14)\nand (Variable16 in (Variable1) or isempty(Variable1))\n| summarize Count = dcount(Variable17) by bin(TIME, 1h), Variable18\n| summarize Count = max(Count) by Variable18\n| Variable19 Variable20.Variable21=true Variable22 | extend Variable23= toscalar(Variable22 | summarize sum(Count))\n| extend Variable24=strcat(round(Count*100.0/Variable23,2),String10)\n| order by Count desc\n| project Variable25=Variable18, Count, Variable24", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 = String5;\nDECLARE Variable5 = String6;\nDECLARE Variable6 = String7;\nDECLARE Variable7 STRING;\nDECLARE Variable8 = String8;\nSET VAR Variable7 = (\nselect array_join(collect_list(output), String9)\nfrom FunctionOrTable1(Variable1, Variable2, Variable3, Variable4, Variable5, Variable6));\nWITH Variable9 AS (\nSELECT \nDATE_TRUNC(String10, TIME) AS Variable10,\nVariable11, \nCOUNT(DISTINCT Variable12) AS Count\nFROM FunctionOrTable2\nWHERE TIME BETWEEN Variable1 AND Variable2\nAND array_contains(split(Variable7, String9), Variable13)\nAND (length(Variable8) = 0 OR array_contains(transform(split(Variable8, String9), Variable14 -> rtrim(String11, Variable14)), Variable15))\nGROUP BY DATE_TRUNC(String10, TIME), Variable11\n),\nVariable16 AS (\nSELECT \nVariable11, \nMAX(Count) AS Count\nFROM Variable9\nGROUP BY Variable11\n),\nVariable17 AS (\nSELECT SUM(Count) AS Variable18 FROM Variable16\n),\nVariable19 AS (\nSELECT \nVariable20.Variable11 AS Variable21, \nVariable20.Count, \nCONCAT(ROUND(Variable20.Count * 100.0 / Variable22.Variable18, 2), String12) AS Variable23\nFROM Variable16 Variable20, Variable17 Variable22\n)\nSELECT Variable21, Count, Variable23\nFROM Variable19\nORDER BY Count DESC"}, {"kql": "let Variable1 = dynamic(null);\nlet Variable2 = datetime(2024-07-19T07:30:11Z);\nlet Variable3 = datetime(2024-07-26T07:30:11Z);\nlet Variable4 = dynamic([String1, String2, String3, String4, String5]);\nlet Variable7=Variable4;\nFunctionOrTable1\n| where TIME between (Variable2..Variable3)\nand Variable8 in (Variable7)\nand (Variable9 in (Variable1) or isempty(Variable1))\n| summarize Count = dcount(Variable10) by bin(TIME, 1h), Variable11\n| summarize Count = max(Count) by Variable11  | Variable12 Variable13.Variable14=true Variable15\n| extend Variable16 = split(Variable11, String6)\n| Variable18-expand Variable16\n| where Variable16 != String7\n| summarize Count=sum(Count) by Variable19=tostring(Variable16)\n| extend Variable20= toscalar(Variable15 | summarize sum(Count))\n| extend Variable21=strcat(round(Count*100.0/Variable20,2),String8)\n| project-away Variable20\n| order by Count desc", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 = String5;\nWITH Variable5 AS (\nSELECT \nVariable6,\nCOUNT(DISTINCT Variable7) AS Count,\nDATE_TRUNC(String6, TIME) AS Variable8\nFROM FunctionOrTable1\nWHERE TIME BETWEEN Variable1 AND Variable2\nAND array_contains(split(Variable3, String7), uuid)\nAND (length(Variable4) = 0 OR array_contains(transform(split(Variable4, String7), Variable9 -> rtrim(String8, Variable9)), Variable10))\nGROUP BY Variable6, DATE_TRUNC(String6, TIME)\n),\nVariable11 AS (\nSELECT \nVariable6,\nMAX(Count) AS Count\nFROM Variable5\nGROUP BY Variable6\n),\nVariable12 AS (\nSELECT \nVariable6,\nCount,\nSPLIT(Variable6, String9) AS Variable13\nFROM Variable11\n),\nVariable14 AS (\nSELECT \nVariable6,\nCount,\nEXPLODE(Variable13) AS Variable15\nFROM Variable12\n),\nVariable16 AS (\nSELECT \nVariable15 AS Variable17,\nSUM(Count) AS Count\nFROM Variable14\nWHERE Variable15 != String10\nGROUP BY Variable15\n),\nVariable18 AS (\nSELECT SUM(Count) AS Variable19 FROM Variable16\n),\nVariable20 AS (\nSELECT \nVariable21.Variable17,\nVariable21.Count,\nCONCAT(ROUND(Variable21.Count * 100.0 / Variable22.Variable19, 2), String11) AS Variable23\nFROM Variable16 Variable21, Variable18 Variable22\n)\nSELECT Variable17, Count, Variable23\nFROM Variable20\nORDER BY Count DESC"}, {"kql": "let Variable1 = dynamic(null);\nlet Variable2 = datetime(2024-07-19T07:30:50Z);\nlet Variable3 = datetime(2024-07-26T07:30:50Z);\nlet Variable4 = dynamic([String1, String2, String3]);\nlet Variable7=Variable4;\nFunctionOrTable1\n| where TIME between (Variable2..Variable3)\nand Variable8 in (Variable7)\nand (Variable9 in (Variable1) or isempty(Variable1))\n| summarize Count = dcount(Variable10) by bin(TIME, 1h), Variable11\n| summarize Count = max(Count) by Variable11  | Variable12 Variable13.Variable14=true Variable15\n| extend Variable16 = split(Variable11, String4)\n| Variable18-expand Variable16\n| where Variable16 != String5\n| summarize Count=sum(Count) by Variable19=tostring(Variable16)\n| extend Variable20= toscalar(Variable15 | summarize sum(Count))\n| extend Variable21=strcat(round(Count*100.0/Variable20,2),String6)\n| project-away Variable20\n| order by Count desc", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 = String5;\nWITH Variable5 AS (\nSELECT \nVariable6,\nCOUNT(DISTINCT Variable7) AS Count,\nDATE_TRUNC(String6, TIME) AS Variable8\nFROM FunctionOrTable1\nWHERE TIME BETWEEN Variable1 AND Variable2\nAND array_contains(split(Variable3, String7), Variable9)\nAND (length(Variable4) = 0 OR array_contains(transform(split(Variable4, String7), Variable10 -> rtrim(String8, Variable10)), Variable11))\nGROUP BY Variable6, DATE_TRUNC(String6, TIME)\n),\nVariable12 AS (\nSELECT \nVariable6,\nMAX(Count) AS Count\nFROM Variable5\nGROUP BY Variable6\n),\nVariable13 AS (\nSELECT \nVariable6,\nCount,\nSPLIT(Variable6, String9) AS Variable14\nFROM Variable12\n),\nVariable15 AS (\nSELECT \nVariable6,\nCount,\nEXPLODE(Variable14) AS Variable16\nFROM Variable13\n),\nVariable17 AS (\nSELECT \nVariable16 AS Variable18,\nSUM(Count) AS Count\nFROM Variable15\nWHERE Variable16 != String10\nGROUP BY Variable16\n),\nVariable19 AS (\nSELECT SUM(Count) AS Variable20 FROM Variable17\n),\nVariable21 AS (\nSELECT \nVariable22.Variable18,\nVariable22.Count,\nCONCAT(ROUND(Variable22.Count * 100.0 / Variable23.Variable20, 2), String11) AS Variable24\nFROM Variable17 Variable22, Variable19 Variable23\n)\nSELECT Variable18, Count, Variable24\nFROM Variable21\nORDER BY Count DESC"}, {"kql": "let Variable1 = dynamic(null);\nlet Variable2 = String1;\nlet Variable4 = datetime(2024-07-19T07:31:51Z);\nlet Variable5 = datetime(2024-07-26T07:31:51Z);\nlet Variable6 = dynamic(null);\nlet Variable7 = dynamic([String2, String3, String4, String5, String6]);\nlet Variable10 = dynamic([String7, String8, String9]);\nlet Variable13 = toscalar(FunctionOrTable1(Variable4, Variable5,Variable2,Variable7,Variable10,Variable6));\nlet Variable14=Variable13;\nFunctionOrTable2\n| where TIME between (Variable4..Variable5)\nand Variable15 in (Variable14)\nand (Variable16 in (Variable1) or isempty(Variable1))\n| summarize Count = dcount(Variable17) by bin(TIME, 1h), Variable18\n| summarize Count = max(Count) by Variable18  | Variable19 Variable20.Variable21=true Variable22\n| extend Variable23 = split(Variable18, String10)\n| Variable25-expand Variable23\n| where Variable23 != String11\n| summarize Count=sum(Count) by Variable26=tostring(Variable23)\n| extend Variable27= toscalar(Variable22 | summarize sum(Count))\n| extend Variable28=strcat(round(Count*100.0/Variable27,2),String12)\n| project-away Variable27\n| order by Count desc", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 = String5;\nDECLARE Variable5 = String6;\nDECLARE Variable6 = String7;\nDECLARE Variable7 STRING;\nDECLARE Variable8 = String8;\nSET VAR Variable7 = (\nselect array_join(collect_list(output), String9)\nfrom FunctionOrTable1(Variable1, Variable2, Variable3, Variable4, Variable5, Variable6));\nWITH Variable9 AS (\nSELECT \nVariable10,\nCOUNT(DISTINCT Variable11) AS Count,\nDATE_TRUNC(String10, TIME) AS Variable12\nFROM FunctionOrTable2\nWHERE TIME BETWEEN Variable1 AND Variable2\nAND array_contains(split(Variable7, String9), Variable13)\nAND (length(Variable8) = 0 OR array_contains(transform(split(Variable8, String9), Variable14 -> rtrim(String11, Variable14)), Variable15))\nGROUP BY Variable10, DATE_TRUNC(String10, TIME)\n),\nVariable16 AS (\nSELECT \nVariable10,\nMAX(Count) AS Count\nFROM Variable9\nGROUP BY Variable10\n),\nVariable17 AS (\nSELECT \nVariable10,\nCount,\nSPLIT(Variable10, String12) AS Variable18\nFROM Variable16\n),\nVariable19 AS (\nSELECT \nVariable10,\nCount,\nEXPLODE(Variable18) AS Variable20\nFROM Variable17\n),\nVariable21 AS (\nSELECT \nVariable20 AS Variable22,\nSUM(Count) AS Count\nFROM Variable19\nWHERE Variable20 != String13\nGROUP BY Variable20\n),\nVariable23 AS (\nSELECT SUM(Count) AS Variable24 FROM Variable21\n),\nVariable25 AS (\nSELECT \nVariable26.Variable22,\nVariable26.Count,\nCONCAT(ROUND(Variable26.Count * 100.0 / Variable27.Variable24, 2), String14) AS Variable28\nFROM Variable21 Variable26, Variable23 Variable27\n)\nSELECT Variable22, Count, Variable28\nFROM Variable25\nORDER BY Count DESC"}, {"kql": "let Variable1 = int(637);\nlet Variable2 = dynamic(null);\nlet Variable3 = datetime(2024-07-19T07:32:37Z);\nlet Variable4 = datetime(2024-07-26T07:32:37Z);\nlet Variable5 = dynamic([String1, String2, String3, String4, String5]);\nlet Variable8 = FunctionOrTable1(Variable3, Variable4, Variable5, dynamic(null), Variable2);\nlet Variable9 = toscalar(FunctionOrTable1(Variable3, Variable4, Variable5, dynamic(null), Variable2) | top 1 by Variable10 | project Variable10);\nlet Variable11 = toscalar(Variable8 | top 1 by Variable10 | project Variable10);\nlet Variable12 = Variable8\n| where Variable10 >= Variable1\n| summarize Variable13=(count() > 0)\n;\nVariable12 | extend Variable14=strcat(String6, iif(isempty(toscalar(Variable11)),0, toint(Variable11)),String7, \niif(\nVariable13, String8, \nstrcat(String9, iif(isempty(Variable1-toint(Variable9)), Variable1, Variable1-toint(Variable9)), String10, Variable1 ,String11)))\n| project Variable14", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 = String5;\nDECLARE Variable5 = 637;\nWITH data AS (\nselect *\nfrom FunctionOrTable1(Variable1, Variable2, Variable3, String6, Variable4)\n),\nVariable6 AS (\nSELECT Variable7\nFROM data\nORDER BY Variable7 DESC\nLIMIT 1\n),\nVariable8 AS (\nSELECT Variable7\nFROM data\nORDER BY Variable7 DESC\nLIMIT 1\n),\nVariable9 AS (\nSELECT \nCOUNT(*) > 0 AS Check\nFROM data\nWHERE Variable7 >= Variable5\n),\nVariable10 AS (\nSELECT \n*,\nCONCAT(\nString7, \nCOALESCE((SELECT Variable7 FROM Variable8), 0), \nString8, \nIF(\n(SELECT Check FROM Variable9),\nString9,\nCONCAT(\nString10,\nCOALESCE(Variable5 - (SELECT Variable7 FROM Variable6), Variable5),\nString11, Variable5, String12\n)\n)\n) AS Variable11\nFROM Variable9\n)\nSELECT Variable11\nFROM Variable10"}, {"kql": "let Variable1 = int(2435);\nlet Variable2 = dynamic(null);\nlet Variable3 = datetime(2024-07-19T07:33:30Z);\nlet Variable4 = datetime(2024-07-26T07:33:30Z);\nlet Variable5 = dynamic([String1, String2, String3]);\nlet Variable8 = FunctionOrTable1(Variable3, Variable4, dynamic(null), Variable5, Variable2);\nlet Variable9 = toscalar(Variable8 | top 1 by Variable10 | project Variable10);\nlet Variable11 = toscalar(FunctionOrTable1(Variable3, Variable4, dynamic(null), Variable5, Variable2) | top 1 by Variable10 | project Variable10);\nlet Variable12 = Variable8\n| where Variable10 >= Variable1\n| summarize Variable13=(count() > 0)\n;\nVariable12 | extend Variable14=strcat(String4, iif(isempty(toscalar(Variable9)),0, toint(Variable9)),String5, \niif(Variable13, String6, \nstrcat(String7, iif(isempty(Variable1-toint(Variable11)), Variable1, Variable1-toint(Variable11)), String8, Variable1 ,String9)))\n| project Variable14", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 = String5;\nDECLARE Variable5 = 2345;\nWITH data AS (\nselect *\nfrom FunctionOrTable1(Variable1, Variable2, String6, Variable3, Variable4)\n),\nVariable6 AS (\nSELECT Variable7\nFROM data\nORDER BY Variable7 DESC\nLIMIT 1\n),\nVariable8 AS (\nSELECT Variable7\nFROM data\nORDER BY Variable7 DESC\nLIMIT 1\n),\nVariable9 AS (\nSELECT \nCOUNT(*) > 0 AS Check\nFROM data\nWHERE Variable7 >= Variable5\n),\nVariable10 AS (\nSELECT \n*,\nCONCAT(\nString7, \nCOALESCE((SELECT Variable7 FROM Variable6), 0), \nString8, \nIF(\n(SELECT Check FROM Variable9),\nString9,\nCONCAT(\nString10,\nCOALESCE(Variable5 - (SELECT Variable7 FROM Variable8), Variable5),\nString11, Variable5, String12\n)\n)\n) AS Variable11\nFROM Variable9\n)\nSELECT Variable11\nFROM Variable10"}, {"kql": "let Variable1 = int(2435);\nlet Variable2 = dynamic(null);\nlet Variable3 = String1;\nlet Variable5 = datetime(2024-07-19T07:34:15Z);\nlet Variable6 = datetime(2024-07-26T07:34:15Z);\nlet Variable7 = dynamic(null);\nlet Variable8 = dynamic([String2, String3, String4, String5, String6]);\nlet Variable11 = dynamic([String7, String8, String9]);\nlet Variable14 = toscalar(FunctionOrTable1(Variable5, Variable6,Variable3,Variable8,Variable11,Variable7));\nlet Variable15 = FunctionOrTable2(Variable5, Variable6, dynamic(null), Variable14, Variable2);\nlet Variable16=toscalar(FunctionOrTable2(Variable5, Variable6, dynamic(null), Variable14, Variable2) | top 1 by Variable17 | project Variable17);\nlet Variable18 = toscalar(Variable15 | top 1 by Variable17 | project Variable17);\nlet Variable19 = Variable15\n| where Variable17 >= Variable1\n| summarize Variable20=(count() > 0)\n;\nVariable19 | extend Variable21=strcat(String10, iif(isempty(toscalar(Variable18)),0, toint(Variable18)),String11, \niif(Variable20, String12, \nstrcat(String13, iif(isempty(Variable1-toint(Variable16)), Variable1, Variable1-toint(Variable16)), String14, Variable1 ,String15)))\n| project Variable21", "sql": "DECLARE Variable1 = to_timestamp(String1, String2);\nDECLARE Variable2 = to_timestamp(String3, String2);\nDECLARE Variable3 = String4;\nDECLARE Variable4 = String5;\nDECLARE Variable5 = String6;\nDECLARE Variable6 = String7;\nDECLARE Variable7 STRING;\nDECLARE Variable8 = String8;\nDECLARE Variable9 = 2345;\nSET VAR Variable7 = (\nselect array_join(collect_list(output), String9)\nfrom FunctionOrTable1(Variable1, Variable2, Variable3, Variable4, Variable5, Variable6));\nWITH data AS (\nSELECT *\nFROM FunctionOrTable2(Variable1, Variable2, String10, Variable7, Variable8)\n),\nVariable10 AS (\nSELECT Variable11\nFROM data\nORDER BY Variable11 DESC\nLIMIT 1\n),\nVariable12 AS (\nSELECT Variable11\nFROM data\nORDER BY Variable11 DESC\nLIMIT 1\n),\nVariable13 AS (\nSELECT \nCOUNT(*) > 0 AS Check\nFROM data\nWHERE Variable11 >= Variable9\n),\nVariable14 AS (\nSELECT \nCONCAT(\nString11, \nCOALESCE((SELECT Variable11 FROM Variable12), 0), \nString12, \nIF(\n(SELECT Check FROM Variable13),\nString13,\nCONCAT(\nString14,\nCOALESCE(Variable9 - (SELECT Variable11 FROM Variable10), Variable9),\nString15, Variable9, String16\n)\n)\n) AS Variable15\nFROM Variable13\n)\nSELECT Variable15\nFROM Variable14"}, {"kql": "FunctionOrTable1\n| where TIME between (Variable1..Variable2)\n| where [String1] in (Variable4) or isempty(Variable4)\n| where\n(Variable5 in (Variable6) or isempty(Variable6))\nand (Variable7 in (Variable8) or isempty(Variable8))\n| where (Variable9 in ([String2]) or isempty(Variable10))", "sql": "SELECT *\nFROM FunctionOrTable1\nWHERE TIME BETWEEN Variable1 AND Variable2\nAND (length(Variable3) = 0 OR array_contains(split(Variable3, String1), Variable4))\nAND (length(Variable5) = 0 OR array_contains(split(Variable5, String1), uuid))\nAND (length(Variable6) = 0 OR array_contains(split(Variable6, String1), Variable7))\nAND (length(Variable8) = 0 OR array_contains(transform(split(Variable8, String1), Variable9 -> rtrim(String2, Variable9)), Variable10))"}, {"kql": "FunctionOrTable1\n| where TIME between (Variable1 .. Variable2)\n| where isnull(Variable3) or Variable4 in (Variable3)\n| where isnull(Variable5) or Variable6 in (Variable5)\n| where isnotnull(Variable7) and Variable8 in (Variable7)\n| summarize Variable9 = dcount(Variable10) by bin(TIME, 1h), Variable8\n| summarize Variable9 = max(Variable9) by bin(TIME, 1d), Variable8\n", "sql": "WITH Variable1 as (\nSELECT * EXCEPT(Variable2, Variable3), lower(Variable2) as Variable2, lower(Variable3) as Variable3\nFROM FunctionOrTable1\n),\nVariable4 AS (\nSELECT \nDATE_TRUNC(String1, TIME) AS Variable5,\nVariable6,\nCOUNT(DISTINCT Variable2) AS Variable7\nFROM Variable1\nWHERE TIME BETWEEN Variable8 AND Variable9\nAND (length(Variable10) = 0 OR array_contains(split(Variable10, String2), uuid))\nAND (length(Variable11) = 0 OR array_contains(split(Variable11, String2), Variable3))\nAND (length(Variable12) > 0 AND array_contains(transform(split(Variable12, String2), Variable13 -> rtrim(String3, Variable13)), Variable6))\nGROUP BY DATE_TRUNC(String1, TIME), Variable6\n),\nVariable14 AS (\nSELECT \nDATE_TRUNC(String4, Variable5) AS Variable15,\nVariable6,\nMAX(Variable7) AS Variable7\nFROM Variable4\nGROUP BY DATE_TRUNC(String4, Variable5), Variable6\n)\nSELECT * FROM Variable14"}, {"kql": "let Variable1 = dynamic(null);\nlet Variable2=toscalar(FunctionOrTable1\n| where TIME between (Variable3 .. Variable4)\n| where \n(isnull(Variable1) or Variable5 in (Variable1))\nand (isnull(Variable6) or Variable7 in (Variable6))\nand (isnull(Variable8) or Variable9 in (Variable8))\n| where isnull(Variable10) or Variable11 in (Variable10)\n| project-rename Variable12=Variable13\n| where isnotnull(Variable12)\n| summarize Variable14=min(TIME), Variable15=max(TIME), arg_max(TIME, Variable12), Variable16=maxif(TIME, Variable12!=5) by Variable5\n| where datetime_diff(String1, Variable15, Variable14) <= 20 or \n(Variable12 == 5 and isnotnull(Variable16) and datetime_diff(String1, TIME, Variable16) <= 20)\n| summarize Variable5 = make_list(Variable5)\n);\nFunctionOrTable1\n| where TIME between (Variable3 .. Variable4)\n| where Variable5 !in (todynamic(Variable2))\nand (isnull(Variable6) or Variable7 in (Variable6))\nand (isnull(Variable8) or Variable9 in (Variable8))\n| where isnull(Variable10) or Variable11 in (Variable10)\n| project-rename Variable18=Variable19\n| extend Variable12 = tostring(Variable13)\n| project TIME, Variable5, Variable18, Variable12, Variable11, Variable20, Variable21, Variable22, Variable9\n| where isnotempty(Variable12)\n| extend Variable12=case( Variable12 ==String2,String3,Variable12)\n| extend Variable12=case( Variable12 ==String4,String5,Variable12)\n| extend Variable12=case( Variable12 ==String6,String7,Variable12)\n| extend Variable12=case( Variable12 ==String8,String9,Variable12)\n| extend Variable12=case( Variable12 ==String10,String11,Variable12)\n| extend Variable12=case( Variable12 ==String12,String13,Variable12)\n| extend Variable18=case(Variable12==String14 and Variable18 == 1, String15,\nVariable12==String14 and Variable18 == 2, String16,\nVariable12==String14 and Variable18 == 3, String17,\nVariable12==String14 and Variable18 == 4, String18,\nVariable12==String14 and Variable18 == 5, String19,\nVariable12==String14 and Variable18 == 6, String20,\nVariable12==String14 and Variable18 == 7, String21,\nVariable12==String14 and Variable18 == 8, String22,\nVariable12==String14 and Variable18 == 9, String23,\nVariable12==String14 and Variable18 ==10, String24, String25)\n| summarize arg_max(TIME,*) by Variable5, Variable11\n| extend Variable18 = \niff(Variable18 in (String15,String17,String21), String26,\niif(Variable12 != String3, String27, String28))\n| summarize \nVariable49=dcountif(Variable5, Variable18==String27), \nVariable50=dcountif(Variable5, Variable18==String26),\nVariable51=dcount(Variable5) by Variable11\n| extend Variable52=toreal(Variable49)/toreal(Variable51)", "sql": "WITH Variable1 AS (\nSELECT \nVariable2,\nMIN(TIME) AS Variable3,\nMAX(TIME) AS Variable4,\nMAX(CASE WHEN COALESCE(Variable5,0) != 5 then TIME ELSE null end) AS Variable6,\nMAX(Variable5) AS Variable7\nFROM FunctionOrTable1\nWHERE TIME BETWEEN Variable8 AND Variable9\nAND (length(Variable10) = 0 OR array_contains(split(Variable10, String1), Variable2))\nAND (length(Variable11) = 0 OR array_contains(split(Variable11, String1), uuid))\nAND (length(Variable12) = 0 OR array_contains(split(Variable12, String1), Variable13))\nAND (length(Variable14) = 0 OR array_contains(transform(split(Variable14, String1), Variable15 -> rtrim(String2, Variable15)), Variable16))\nAND Variable5 IS NOT NULL\nGROUP BY Variable2\nHAVING (unix_timestamp(MAX(TIME)) - unix_timestamp(MIN(TIME)) <= 20 * 60)\nOR (MAX(Variable5) = 5 AND Variable6 IS NOT NULL AND (unix_timestamp(MAX(TIME)) - unix_timestamp(Variable6) <= 20 * 60))\n),\nVariable17 AS (\nSELECT \nTIME,\nVariable2,\nVariable18 AS Variable19,\nCAST(Variable5 AS STRING) AS Variable7,\nVariable16,\nVariable20,\nVariable21,\nVariable22,\nVariable13\nFROM FunctionOrTable1\nWHERE TIME BETWEEN Variable8 AND Variable9\nAND Variable2 NOT IN (SELECT Variable2 FROM Variable1)\nAND (length(Variable11) = 0 OR array_contains(split(Variable11, String1), uuid))\nAND (length(Variable12) = 0 OR array_contains(split(Variable12, String1), Variable13))\nAND (length(Variable14) = 0 OR array_contains(transform(split(Variable14, String1), Variable15 -> rtrim(String2, Variable15)), Variable16))\nAND Variable5 IS NOT NULL\n),\nVariable23 AS (\nSELECT \nTIME,\nVariable2,\nCASE \nWHEN Variable7 = String3 THEN String4\nWHEN Variable7 = String5 THEN String6\nWHEN Variable7 = String7 THEN String8\nWHEN Variable7 = String9 THEN String10\nWHEN Variable7 = String11 THEN String12\nWHEN Variable7 = String13 THEN String14\nELSE Variable7\nEND AS Variable7,\nCASE \nWHEN Variable7 = String15 AND Variable19 = 1 THEN String16\nWHEN Variable7 = String15 AND Variable19 = 2 THEN String17\nWHEN Variable7 = String15 AND Variable19 = 3 THEN String18\nWHEN Variable7 = String15 AND Variable19 = 4 THEN String19\nWHEN Variable7 = String15 AND Variable19 = 5 THEN String20\nWHEN Variable7 = String15 AND Variable19 = 6 THEN String21\nWHEN Variable7 = String15 AND Variable19 = 7 THEN String22\nWHEN Variable7 = String15 AND Variable19 = 8 THEN String23\nWHEN Variable7 = String15 AND Variable19 = 9 THEN String24\nWHEN Variable7 = String15 AND Variable19 = 10 THEN String25\nELSE String26\nEND AS Variable19,\nVariable16,\nVariable20,\nVariable21,\nVariable22,\nVariable13\nFROM Variable17\n),\nVariable24 AS (\nSELECT \nTIME,\nVariable7,\nVariable2,\nVariable16,\nCASE \nWHEN Variable19 IN (String16, String18, String22) THEN String27\nWHEN Variable7 != String4 THEN String28\nELSE String29 \nEND AS Variable19\nFROM Variable23\n),\nVariable25 AS (\nSELECT \nVariable2,\nVariable16,\nMAX(TIME) AS Variable4,\nMAX(Variable7) AS Variable7,\nMAX(Variable19) AS Variable19\nFROM Variable24\nGROUP BY Variable2, Variable16\n),\nVariable26 AS (\nSELECT \nVariable16,\nCOUNT(DISTINCT Variable2) AS Variable27,\nCOUNT(DISTINCT(case when Variable19 = String28 then Variable2 else null end)) AS offline,\nCOUNT(DISTINCT(case when Variable19 = String27 then Variable2 else null end)) AS Variable28\nFROM Variable25\nGROUP BY Variable16\n)\nSELECT \nVariable16,\noffline,\nVariable28,\nVariable27,\nCAST(offline AS DOUBLE) / CAST(Variable27 AS DOUBLE) AS Variable29\nFROM Variable26"}, {"kql": "let Variable1 = FunctionOrTable1\n| where TIME between (Variable2..Variable3)\n| where Variable4 in (Variable5) or isempty(Variable5)\n| where (Variable6 in (Variable7) or isempty(Variable7)) and (Variable8 in (Variable9) or isempty(Variable9))\n| summarize arg_max(TIME, *) by Variable10\n| where Variable11 == 1; \nlet Variable12 = Variable1 | distinct Variable10;\nlet Variable13 = FunctionOrTable2\n| where TIME between (Variable2..Variable3) and Variable10 in (Variable12)\n| summarize arg_max(TIME, Variable14) by Variable10\n| extend Variable15 = toint(Variable14.Variable15) | where Variable15 == 1;\nVariable1\n| where Variable10 in (Variable13) \n| summarize Variable16=dcountif(Variable10, Variable17 == 0), Variable18=dcount(Variable10) by Variable8\n| project Variable8, \nVariable19 = round(todouble(Variable16)/todouble(Variable18)*100, 2), \nVariable16, Variable18\n| extend Variable20 = toint(split(Variable8, String1)[0])\n| extend Variable21 = toint(split(Variable8, String1)[-1])\n| sort by Variable20 asc, Variable21 asc\n| project-away Variable20, Variable21", "sql": "WITH Variable1 AS (\nSELECT \n*\nFROM FunctionOrTable1\nWHERE TIME BETWEEN Variable2 AND Variable3\nAND (length(Variable4) = 0 OR array_contains(split(Variable4, String1), uuid))\nAND (length(Variable5) = 0 OR array_contains(split(Variable5, String1), Variable6))\nAND (length(Variable7) = 0 OR array_contains(transform(split(Variable7, String1), Variable8 -> rtrim(String2, Variable8)), Variable9))\n),\nVariable10 AS (\nSELECT \nVariable11,\nmax_by(TIME, TIME) as TIME,\nmax_by(uuid, TIME) as uuid,\nmax_by(Variable6, TIME) as Variable6,\nmax_by(Variable9, TIME) as Variable9,\nmax_by(Variable12, TIME) as Variable12,\nmax_by(Variable13, TIME) as Variable13,\nmax_by(Variable14, TIME) as Variable14,\nmax_by(Variable15, TIME) as Variable15,\nmax_by(Variable16, TIME) as Variable16,\nmax_by(Variable17, TIME) as Variable17,\nmax_by(Variable18, TIME) as Variable18,\nmax_by(Variable19, TIME) as Variable19,\nmax_by(Variable20, TIME) as Variable20,\nmax_by(Variable21, TIME) as Variable21,\nmax_by(Variable22, TIME) as Variable22,\nmax_by(Variable23, TIME) as Variable23,\nmax_by(Variable24, TIME) as Variable24,\nmax_by(Variable25, TIME) as Variable25,\nmax_by(Variable26, TIME) as Variable26,\nmax_by(Variable27, TIME) as Variable27,\nmax_by(Variable28, TIME) as Variable28,\nmax_by(Variable29, TIME) as Variable29,\nmax_by(Variable30, TIME) as Variable30,\nmax_by(Variable31, TIME) as Variable31,\nmax_by(Variable32, TIME) as Variable32,\nmax_by(Variable33, TIME) as Variable33,\nmax_by(Variable34, TIME) as Variable34,\nmax_by(Variable35, TIME) as Variable35,\nmax_by(Variable36, TIME) as Variable36,\nmax_by(Variable37, TIME) as Variable37\nFROM Variable1\nGROUP BY Variable11\n),\nVariable38 AS (\nSELECT *\nFROM Variable10\nWHERE Variable36 = 1\n),\nVariable39 AS (\nSELECT DISTINCT Variable11\nFROM Variable38\n),\nVariable40 AS (\nSELECT \nmax_by(Variable41, TIME) AS Variable41,\nVariable11\nFROM FunctionOrTable2\nWHERE TIME BETWEEN Variable2 AND Variable3\nAND Variable11 IN (SELECT Variable11 FROM Variable39)\nGROUP BY Variable11\n),\nVariable42 AS (\nSELECT Variable11\nFROM Variable40\nWHERE CAST(Variable41:Variable43 AS INT) = 1\n),\nVariable44 AS (\nSELECT \nVariable9,\nCOUNT(CASE WHEN Variable37 = 0 THEN 1 END) AS Variable45,\nCOUNT(Variable11) AS Variable46\nFROM Variable38\nWHERE Variable11 IN (SELECT Variable11 FROM Variable42)\nGROUP BY Variable9\n),\nVariable47 AS (\nSELECT *,\nROUND(CAST(Variable45 AS DOUBLE) / CAST(Variable46 AS DOUBLE) * 100, 2) AS Variable48,\nCAST(SPLIT(Variable9, String3)[0] AS INT) AS Variable49,\nCAST(SPLIT(Variable9, String3)[-1] AS INT) AS Variable50\nFROM Variable44\n),\nVariable51 AS (\nSELECT \nVariable9,\nVariable48,\nVariable45,\nVariable46\nFROM Variable47\nORDER BY Variable49 ASC, Variable50 ASC\n)\nSELECT * FROM Variable51"}, {"kql": "let Variable1=datetime_add(String1,-60000,Variable2);\nFunctionOrTable1\n| where TIME between (Variable2 .. Variable3)\n| where isnull(Variable4) or Variable5 in (Variable4)\n| where isnull(Variable6) or Variable7 in (Variable6)\n| where isnull(Variable8) or Variable9 in (Variable8)\n| project-rename Variable10=Variable11, Variable12=Variable13\n| where isnotempty( Variable10) and Variable14 contains String2\nand isnotempty(Variable12)\n| extend Variable12=iff(Variable12==String3,Variable1,Variable12)\n| extend Variable16=datetime_diff(String1, TIME, Variable12)\n| extend Variable10=iff(Variable16 < 60*10, String4, Variable10) \n| summarize Variable17 = countif(Variable10 == String5), Variable18 = count() by Variable9\n| extend Variable19 = round(todouble(Variable17)/todouble(Variable18)*100, 2)\n| extend Variable20 = toint(split(Variable9, String6)[0])\n| extend Variable21 = toint(split(Variable9, String6)[-1])\n| sort by Variable20 asc, Variable21 asc\n| project-away Variable20, Variable21\n| project-rename Variable22 = Variable18", "sql": "WITH Variable1 AS (\nSELECT \nVariable2 AS Variable3,\nVariable4 AS Variable5,\nTIME,\nVariable6,\nVariable7\nFROM FunctionOrTable1\nWHERE TIME BETWEEN Variable8 AND Variable9 \nAND (length(Variable10) = 0 OR array_contains(split(Variable10, String1), uuid))\nAND (length(Variable11) = 0 OR array_contains(split(Variable11, String1), Variable12))\nAND (length(Variable13) = 0 OR array_contains(transform(split(Variable13, String1), Variable14 -> rtrim(String2, Variable14)), Variable6))\n),\nVariable15 AS (\nSELECT * EXCEPT(Variable5),\nCASE \nWHEN Variable5 = String3 or Variable5 is null THEN dateadd(SECOND, -60000, Variable8)\nELSE Variable5\nEND AS Variable5,\nUNIX_TIMESTAMP(TIME) - UNIX_TIMESTAMP(\nCASE \nWHEN Variable5 = String3 or Variable5 is null THEN dateadd(SECOND, -60000, Variable8)\nELSE Variable5\nEND\n) AS Variable16,\nCASE \nWHEN (UNIX_TIMESTAMP(TIME) - UNIX_TIMESTAMP(\nCASE \nWHEN Variable5 = String3 or Variable5 is null THEN dateadd(SECOND, -60000, Variable8)\nELSE Variable5\nEND\n)) < 600 THEN String4\nELSE Variable3\nEND AS Variable17\nFROM Variable1\nWHERE Variable3 IS NOT NULL \nAND Variable7 LIKE String5\n),\nVariable18 AS (\nSELECT \nVariable6,\nCOUNT(CASE WHEN Variable17 = String6 THEN 1 END) AS offline,\nCOUNT(*) AS Variable19\nFROM Variable15\nGROUP BY Variable6\n),\nVariable20 AS (\nSELECT *,\nROUND(CAST(offline AS DOUBLE) / CAST(Variable19 AS DOUBLE) * 100, 2) AS Variable21,\nCAST(SPLIT(Variable6, String7)[0] AS INT) AS Variable22,\nCAST(SPLIT(Variable6, String7)[-1] AS INT) AS Variable23\nFROM Variable18\n),\nVariable24 AS (\nSELECT \nVariable6,\nVariable21,\noffline,\nVariable19 AS Variable25\nFROM Variable20\nORDER BY Variable22 ASC, Variable23 ASC\n)\nSELECT * FROM Variable24"}, {"kql": "FunctionOrTable1(Variable1,Variable2,Variable3,Variable4,Variable5,dynamic(null))\n| project Variable6, TIME, Variable7, Variable8, Variable9, Variable10, Variable11, Variable12, Variable13\n| summarize arg_max(TIME, *) by Variable7\n| where Variable11  has_any (String1,String2,String3,String4,String5,String6,String7,String8,String9,String10,String11,String12,String13,String14,String15,String16,String17,String18,String19,String20,String21,String22)\n| where (Variable9[String23] == 1 or Variable9[String24] == 1)\n| where Variable6[String25]==1 \n| where Variable6[String26][String27] != String28\n| extend Variable36 = parse_json(tostring(Variable6[String29]))\n| extend Variable37 = parse_json(tostring(Variable6[String30]))\n| summarize Variable39=dcount(Variable7), \nVariable40=dcountif(Variable7, Variable37 == 1 ),\nVariable41=dcountif(Variable7, Variable37 == 1 and Variable36 > 0) by Variable13\n| extend Variable42 = round(todouble(Variable41) / todouble(Variable40)*100, 2)\n| project Variable13, Variable41, Variable42, Variable40", "sql": "WITH FunctionOrTable1 AS (\nSELECT *\nFROM FunctionOrTable1(Variable1, Variable2, Variable3, Variable4, Variable5)\n),\nVariable6 AS (\nSELECT \nVariable7, \nTIME, \nVariable8, \nVariable9, \nVariable10, \nVariable11, \nVariable12, \nVariable13, \nVariable14\nFROM FunctionOrTable1\n),\nVariable15 AS (\nSELECT \nVariable8,\nmax_by(Variable7, TIME) AS Variable7,\nmax_by(TIME, TIME) AS TIME,\nmax_by(Variable9, TIME) AS Variable9,\nmax_by(Variable10, TIME) AS Variable10,\nmax_by(Variable11, TIME) AS Variable11,\nmax_by(Variable12, TIME) AS Variable12,\nmax_by(Variable13, TIME) AS Variable13,\nmax_by(Variable14, TIME) AS Variable14\nFROM Variable6\nGROUP BY Variable8\n),\nVariable16 AS (\nSELECT *\nFROM Variable15\nWHERE Variable12 IN (\nString1,String2,String3,String4,\nString5,String6,String7,String8,\nString9,String10,String11,String12,\nString13,String14,String15,String16,\nString17,String18,String19,String20,\nString21,String22\n)\n),\nVariable17 AS (\nSELECT *\nFROM Variable16\nWHERE Variable10:Variable18::int = 1 OR Variable10:Variable19::int = 1\n),\nVariable20 AS (\nSELECT *,\nVariable7:Variable21::int AS Variable21,\nVariable7:Variable22::int AS Variable23\nFROM Variable17\nWHERE Variable7:Variable24::int = 1 \nAND COALESCE(Variable7:Variable25:Variable26::string,String23) != String24\n)\nSELECT \nVariable14,\nCOUNT(DISTINCT Variable8) AS Variable27,\nCOUNT(DISTINCT CASE WHEN Variable23 = 1 THEN Variable8 END) AS Variable28,\nCOUNT(DISTINCT CASE WHEN Variable23 = 1 AND Variable21 > 0 THEN Variable8 END) AS Variable29,\nROUND(CAST(COUNT(DISTINCT CASE WHEN Variable23 = 1 AND Variable21 > 0 THEN Variable8 END) AS DOUBLE) / \nCAST(COUNT(DISTINCT CASE WHEN Variable23 = 1 THEN Variable8 END) AS DOUBLE) * 100, 2) AS Variable30\nFROM Variable20\nGROUP BY Variable14"}, {"kql": "FunctionOrTable1(Variable1,Variable2,Variable3,Variable4,Variable5,dynamic(null))\n| project Variable6, TIME, Variable7, Variable8, Variable9, Variable10, Variable11, Variable12, Variable13\n| summarize arg_max(TIME, *) by Variable7\n| where Variable11  has_any (String1,String2,String3,String4,String5,String6,String7,String8,String9,String10,String11,String12,String13,String14,String15,String16,String17,String18,String19,String20,String21,String22)\n| where (Variable9[String23] == 1 or Variable9[String24] == 1)\n| where Variable6[String25]==1 \n| where Variable6[String26][String27] != String28\n| extend Variable36 = iff(isempty(Variable6[String29][String30]), 0, toint(Variable6[String29][String30])) \n| extend Variable39 = iff(isempty(Variable6[String29][String31]), 0, toint(Variable6[String29][String31]))\n| summarize \nVariable41=dcountif(Variable7, Variable36 > 0 or Variable39 > 0), Variable42=dcount(Variable7) by Variable13\n| extend Variable43=round(toreal(Variable41)/toreal(Variable42)*100,2)\n| project Variable13, Variable41, Variable43, Variable42", "sql": "WITH FunctionOrTable1 AS (\nSELECT *\nFROM FunctionOrTable1(Variable1, Variable2, Variable3, Variable4, Variable5)\n),\nVariable6 AS (\nSELECT \nVariable7,\nTIME,\nVariable8,\nVariable9,\nVariable10,\nVariable11,\nVariable12,\nVariable13,\nVariable14\nFROM FunctionOrTable1\nWHERE TIME BETWEEN Variable1 AND Variable2\nAND (length(Variable3) = 0 OR array_contains(split(Variable3, String1), uuid))\nAND (length(Variable4) = 0 OR array_contains(split(Variable4, String1), Variable9))\nAND (length(Variable5) > 0 OR array_contains(transform(split(Variable5, String1), Variable15 -> rtrim(String2, Variable15)), Variable14))\n),\nVariable16 AS (\nSELECT \nVariable8,\nmax_by(Variable7, TIME) AS Variable7,\nmax_by(TIME, TIME) AS TIME,\nmax_by(Variable9, TIME) AS Variable9,\nmax_by(Variable10, TIME) AS Variable10,\nmax_by(Variable11, TIME) AS Variable11,\nmax_by(Variable12, TIME) AS Variable12,\nmax_by(Variable13, TIME) AS Variable13,\nmax_by(Variable14, TIME) AS Variable14\nFROM Variable6\nGROUP BY Variable8\n),\nVariable17 AS (\nSELECT *\nFROM Variable16\nWHERE Variable12 IN (\nString3, String4, String5, String6,\nString7, String8, String9, String10,\nString11, String12, String13, String14,\nString15, String16, String17, String18,\nString19, String20, String21, String22,\nString23, String24\n)\nAND (Variable10:Variable18::int = 1 OR Variable10:Variable19::int = 1)\n),\nVariable20 AS (\nSELECT *,\nIFNULL(CAST(Variable7:Variable21:Variable22 AS INT), 0) AS Variable23,\nIFNULL(CAST(Variable7:Variable21:Variable24 AS INT), 0) AS Variable25\nFROM Variable17\nWHERE Variable7:Variable26::int = 1 \nAND COALESCE(Variable7:Variable27:Variable28::string,String25) != String26\n),\nVariable29 AS (\nSELECT \nVariable14,\nCOUNT(DISTINCT CASE WHEN Variable23 > 0 OR Variable25 > 0 THEN Variable8 END) AS Variable30,\nCOUNT(DISTINCT Variable8) AS Variable31\nFROM Variable20\nGROUP BY Variable14\n)\nSELECT \nVariable14,\nVariable30,\nROUND(CAST(Variable30 AS DOUBLE) / CAST(Variable31 AS DOUBLE) * 100, 2) AS Variable32,\nVariable31\nFROM Variable29"}, {"kql": "FunctionOrTable1(Variable1,Variable2,dynamic(null),Variable3,Variable4,dynamic(null)) \n| project Variable5, TIME, Variable6, Variable7, Variable8, Variable9, Variable10, Variable11, Variable12 \n| summarize arg_max(TIME, *) by Variable6 \n| where Variable10  has_any (String1,String2,String3,String4) \n| where (Variable8[String5] == 1 or Variable8[String6] == 1)\n| where Variable5[String7]==1 \n| where Variable5[String8][String9] != String10\n| extend Variable22 = parse_json(tostring(Variable5[String11]))\n| summarize Variable24=dcount(Variable6),\nVariable25=dcountif(Variable6, strlen(tostring(Variable5)) > 0),\nVariable26=dcountif(Variable6, Variable22 == 1) by Variable12\n| extend Variable27=round(100-todouble(Variable26)/todouble(Variable24)*100,2),\nVariable28=Variable24-netagent_running\n| project Variable12, Variable27, Variable28, Variable24", "sql": "WITH FunctionOrTable1 AS (\nSELECT *\nFROM FunctionOrTable1(Variable1, Variable2, Variable3, Variable4, Variable5)\n),\nVariable6 AS (\nSELECT \nVariable7,\nTIME,\nVariable8,\nVariable9,\nVariable10,\nVariable11,\nVariable12,\nVariable13,\nVariable14\nFROM FunctionOrTable1\n),\nVariable15 AS (\nSELECT \nVariable8,\nmax_by(Variable7, TIME) AS Variable7,\nmax_by(TIME, TIME) AS TIME,\nmax_by(Variable9, TIME) AS Variable9,\nmax_by(Variable10, TIME) AS Variable10,\nmax_by(Variable11, TIME) AS Variable11,\nmax_by(Variable12, TIME) AS Variable12,\nmax_by(Variable13, TIME) AS Variable13,\nmax_by(Variable14, TIME) AS Variable14\nFROM Variable6\nGROUP BY Variable8\n),\nVariable16 AS (\nSELECT *\nFROM Variable15\nWHERE Variable12 IN (\nString1, String2, String3, String4\n)\nAND (Variable10:Variable17::int = 1 OR Variable10:Variable18::int = 1)\n),\nVariable19 AS (\nSELECT *,\nCAST(Variable7:Variable20 AS int) AS Variable21\nFROM Variable16\nWHERE Variable7:Variable22::int = 1 \nAND COALESCE(Variable7:Variable23:Variable24::string,String5) != String6\n),\nVariable25 AS (\nSELECT \nVariable14,\nCOUNT(DISTINCT Variable8) AS Variable26,\nCOUNT(DISTINCT CASE WHEN LENGTH(CAST(Variable7 AS STRING)) > 0 THEN Variable8 END) AS Variable27,\nCOUNT(DISTINCT CASE WHEN Variable21 = 1 THEN Variable8 END) AS Variable28\nFROM Variable19\nGROUP BY Variable14\n)\nSELECT \nVariable14,\nROUND(100 - CAST(Variable28 AS DOUBLE) / CAST(Variable26 AS DOUBLE) * 100, 2) AS Variable29,\nVariable26 - Variable28 AS Variable30,\nVariable26\nFROM Variable25"}, {"kql": "FunctionOrTable1\n| where Variable1 between (Variable2 .. Variable3)\n| where isnull(Variable4) or Variable5 in (Variable4)\n| where isnull(Variable6) or Variable7 in (Variable6)\n| extend Variable8 = split(Variable9, String1), Variable10 = split(Variable11, String1), Variable12 = split(Variable13, String1)\n| extend Variable14 = set_union(Variable8, Variable10, Variable12)\n| extend Variable15=set_intersect(Variable14, Variable16)\n| where array_length(Variable15) > 0\n| summarize count() by Variable17\n| sort by Variable17 asc", "sql": "SELECT 0 as Variable1, String1 as Variable2"}, {"kql": "let Variable1 = cluster(String1).database(String2).FunctionOrTable1 | project Variable9 = guid | distinct Variable9;\nlet Variable10 = Variable1 | where (Variable9 in (Variable1) and (isempty(Variable11) or Variable9 in (Variable11)));\nlet Variable12 = dynamic([String3,\nString4,\nString5,\nString6,\nString7,\nString8,\nString9,\nString10]);\nlet Variable18 = dynamic([String11,\nString12]);\nFunctionOrTable2\n| where TIME between (Variable19 .. Variable20)\n| where Variable9 !in (Variable18)\n| where Variable21 in (Variable12)\n| where (Variable22 == String13 and not(Variable21 in (Variable24) or Variable9 in (Variable25) or Variable9 in (Variable1))) or\n(Variable22 == String14 and Variable9 in (Variable10))\n| distinct Variable9\n| summarize Variable9 = make_list(Variable9)", "sql": "WITH Variable1 AS (\nSELECT DISTINCT Variable2 AS Variable3\nFROM FunctionOrTable1\n),\nVariable4 as (\nSELECT * EXCEPT(Variable5, Variable3), lower(Variable5) as Variable5, lower(Variable3) as Variable3\nFROM FunctionOrTable2\n),\nVariable6 AS (\nSELECT Variable3\nFROM Variable1\nWHERE ((length(Variable7.Variable8) = 0) OR (array_contains(split(Variable7.Variable8, String1), Variable3)))\n),\nVariable9 AS (\nSELECT explode(array(\nString2, \nString3, \nString4, \nString5, \nString6, \nString7, \nString8, \nString9\n)) AS uuid\n),\nVariable10 AS (\nSELECT explode(array(\nString10, \nString11\n)) AS Variable3\n)\nSELECT DISTINCT Variable3\nFROM Variable4\nWHERE TIME BETWEEN Variable7.Variable11 AND Variable7.Variable12\nAND Variable3 NOT IN (SELECT Variable3 FROM Variable10)\nAND uuid IN (SELECT uuid FROM Variable9)\nAND (\n(Variable7.Variable13 = String12 \nAND NOT (array_contains(split(Variable7.Variable14, String1), uuid) OR array_contains(split(Variable7.Variable15, String1), Variable3) OR Variable3 IN (SELECT Variable3 FROM Variable1))\n) OR \n(Variable7.Variable13 = String13 \nAND Variable3 IN (SELECT Variable3 FROM Variable6)\n)\n)\nGROUP BY Variable3"}]